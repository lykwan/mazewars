{"version":3,"sources":["webpack:///webpack/bootstrap 8abbf3ae78547831d598","webpack:///./public/src/index.js","webpack:///./public/src/game.js","webpack:///./public/src/components/init.js","webpack:///./public/src/components/components.js","webpack:///./public/src/constants.js","webpack:///./public/src/components/player.js","webpack:///./public/src/components/weapon.js","webpack:///./public/src/components/ball.js","webpack:///./public/src/board.js","webpack:///./public/src/cell.js","webpack:///./public/src/load_assets.js"],"names":["document","addEventListener","game","run","Constants","require","mapGrid","gameSettings","AssetsObj","socket","io","Game","players","weapons","board","tileBoard","createTileBoard","selfId","selfPlayerColor","ball","translateX","translateY","playersReady","playerMvtIntervalId","pageURL","decodeURIComponent","window","location","search","substring","param","split","roomId","undefined","emit","on","$","prepend","data","msg","loadNewRoomButton","setUpJoinRoom","isNewRoom","history","replaceState","remove","removeClass","handleDisableReadyButton","setUpGame","playerCount","console","log","prop","newRoomPage","e","preventDefault","Array","NUM_MAZE_ROWS","i","NUM_MAZE_COLS","Crafty","background","stage","elem","style","backgroundSize","iso","diamondIso","init","TILE","WIDTH","SURFACE_HEIGHT","scene","installStartGameListener","setUpLoadingScene","setUpDisconnect","setUpNewGame","setUpPlayersMovement","setUpPlacingWeapons","setUpCreateDamage","setUpHPChange","setUpTimer","setUpGameOver","setUpAddBall","setUpShowBall","setUpShowBallRecord","setUpHaveWeapon","clearInterval","showGameOver","rankedPlayerScoreLis","rankedPlayerScores","map","player","selfPlayerClass","playerColor","iconImgSrc","longestBallHoldingTime","html","join","playerId","load","NUM_COLS","NUM_ROWS","seedRandomStr","append","appendToPlayersList","showPlayerReady","playerReady","addClass","destroy","isSelfPlayer","setUpGameStatus","createPlayerEntities","createMapEntities","timerMin","Math","floor","timer","timerSec","forEach","playerInfo","idx","playerPx","playerX","playerY","playerPos","playerRow","playerCol","charSprite","parseInt","setUpSocket","setUpSetBallTime","bindingKeyEvents","setUpMovesQueue","attr","w","PLAYER","h","HEIGHT","place","Z","x","y","setUp","setUpAnimation","HPLevelWidth","HP","FULL_HP_BAR_WIDTH","putPlayerMovementListener","selfPlayer","setInterval","charMove","right","left","up","down","moveIdx","pendingMoves","push","Object","assign","getNewPos","newX","newY","displayAnimation","j","maze","isWall","wallEntity","tileEntity","viewport","GAME_WIDTH","EXTRA_GAME_DIM","updatePosWithServerState","stopAnimation","clientAheadBy","length","shift","updatePosWithRemainingMoves","weapon","setUpStaticPos","row","col","type","sprite","addComponent","activeComponent","removeComponent","damageDisappearAfter","playerHP","css","text","BALL","pickUpBall","currentBallHoldingTime","loseBall","ballHolderDiv","weaponType","imgSrc","loseWeapon","createComponents","createPlayerComponent","createWeaponComponent","createBallComponent","module","exports","GAME_HEIGHT","wallDirection","epsilon","c","at","getRowsCols","xOverW","yOverH","fixRoundingErrors","rows","spaceOccupyingX","ceil","cols","spaceOccupyingY","n","abs","round","getTopLeftRowCol","requires","staticRow","staticCol","activeTileSprite","setTimeout","DAMAGE_DISAPPEAR_TIME","ORIG_WIDTH","ORIG_HEIGHT","RATIO","PLAYER_ATTACKING","BFS","DFS","ASTAR","actors","actor","slice","y0","y1","CHAR_STEP","weaponTypes","WEAPON_RANGE","BUFFER_DAMAGE_TIME","BUFFER_SHOOTING_TIME","WEAPON_SPAWN_TIME","DAMAGE_ANIMATION_TIME","HP_DAMAGE","GAME_DURATION","CHECK_COLLISION_INTERVAL","COLORS","charStep","hasTakenDamage","weaponCoolingdown","z","bind","originalEvent","keyCode","keys","pickUpWeapon","X","shootWeapon","RIGHT_ARROW","LEFT_ARROW","UP_ARROW","DOWN_ARROW","isPlaying","pauseAnimation","longestSecsHoldingBall","animate","unflip","flip","reel","checkCollisionInterval","setUpCreator","creatorId","disappearAfter","disappearTime","Cell","Board","m","numGridRows","numGridCols","numMazeCols","numMazeRows","seedrandom","createStartingMaze","frontier","generateMaze","maz","tile","table","dirs","neighborTiles","dir","dRow","dCol","filter","tileRow","tileCol","isInGrid","neighbors","newRow","newCol","getNeighborSpace","cell","isInMaze","hasBeenFrontier","addFrontiers","randomRow","random","randomCol","gridToMazePos","otherRow","otherCol","getRandomCell","expandMaze","randomIndex","splice","randomPos","inMazeNeighbors","neighRow","neighCol","breakWall","translatedX","translatedY","dirX","dirY","getDir","moveDir","collideWithWall","assetsObj"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8abbf3ae78547831d598\n **/","import Game from './game.js';\n/* globals io */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const game = new Game();\n  game.run();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/index.js\n **/","import initGame from './components/init.js';\nimport Board from './board.js';\nconst Constants = require('./constants.js');\nconst mapGrid = Constants.mapGrid;\nconst gameSettings = Constants.gameSettings;\nconst AssetsObj = require('./load_assets.js');\n\nconst socket = io();\n/* globals Crafty */\n/* globals io */\n\nclass Game {\n  constructor() {\n    this.players = {};\n    this.weapons = {};\n    this.board = null;\n    this.tileBoard = this.createTileBoard();\n    this.selfId = null;\n    this.selfPlayerColor = null;\n    this.ball = null;\n    this.translateX = null;\n    this.translateY = null;\n    this.playersReady = {};\n    this.playerMvtIntervalId = null;\n  }\n\n  run() {\n    // getting the room id from the url params, if any\n    let pageURL = decodeURIComponent(window.location.search.substring(1));\n    let param = pageURL.split('=');\n    let roomId;\n    if (param[0] === 'room_id') {\n      roomId = param[1];\n    }\n\n    // if the user is joining a room\n    if (roomId !== undefined) {\n      socket.emit('joinRoom', { roomId: roomId });\n      socket.on('failedToJoin', data => {\n        //TODO: fix this\n        $('#game').prepend(`<span class='error-msg'>${ data.msg }</span>`);\n      });\n    } else {\n      this.loadNewRoomButton();\n    }\n\n    this.setUpJoinRoom();\n  }\n\n  setUpJoinRoom() {\n    socket.on('joinRoom', data => {\n      let param = `?room_id=${ data.roomId }`;\n\n      if (data.isNewRoom) {\n        // replace the url with room id query\n        window.history.replaceState({}, '', param);\n        $('.new-room').remove();\n      }\n\n      // load room content\n      // TODO: change link\n          // <span class=\"start-game-instructions\">\n          //   Press SPACE to  (Needs 2 or more people to start)\n          // </span>\n      $('.waiting-list').removeClass('hidden');\n      $('.waiting-room').removeClass('hidden');\n      $('.waiting-room').prepend(\n        `<div class=\"content\">\n          <h1>Maze Wars</h1>\n          <span>Room Link: amazeball.lilykwan.me/${ param }</span>\n          </span>\n          <ul class=\"keyboard-instructions\">\n            <h3>Instructions</h3>\n            <li>\n              <img src=\"../assets/keyboard_z.png\">\n              <span>PICK UP WEAPON</span>\n            </li>\n            <li>\n              <img src=\"../assets/keyboard_x.png\">\n              <span>SHOOT WEAPON</span>\n            </li>\n            <li>\n              <img src=\"../assets/keyboard_arrows.png\">\n              <span>MOVE AROUND</span>\n            </li>\n          </ul>\n          <div class=\"ready-form\">\n            <button class=\"ready\">\n              READY\n            </button>\n          </div>\n          <div class=\"help\">\n            <span>?</span>\n            <div class=\"help-text container\">\n              <span>The goal of the game is to hold onto the ball for the longest duration of time. You can pick up weapons to kill people, and if the ball holder dies, he releases the ball.</span>\n            </div>\n          </div>\n        </div>`\n      );\n\n      this.handleDisableReadyButton();\n\n      this.setUpGame();\n    });\n  }\n\n  handleDisableReadyButton(playerCount) {\n    if (playerCount === undefined || playerCount <= 1) {\n      console.log('disabling');\n      $('.ready-form button').prop('disabled', true);\n    } else {\n      console.log(' notdisabling');\n      $('.ready-form button').prop('disabled', false);\n    }\n  }\n\n  loadNewRoomButton() {\n    const newRoomPage = `<div class=\"new-room page\">\n                            <div class=\"content\">\n                              <h1>Maze Wars</h1>\n                              <button>Create Room</button>\n                            </div>\n                          </div>`;\n    $('#game').prepend(newRoomPage);\n\n    $('.new-room button').on('click', e => {\n      e.preventDefault();\n      socket.emit('makeNewRoom');\n    });\n  }\n\n  createTileBoard() {\n    let board = new Array(mapGrid.NUM_MAZE_ROWS);\n    for (let i = 0; i < mapGrid.NUM_MAZE_ROWS; i++) {\n      board[i] = new Array(mapGrid.NUM_MAZE_COLS);\n    }\n    return board;\n  }\n\n  setUpGame() {\n    initGame(Crafty);\n    Crafty.background(`url(../assets/lava_background6.jpg)\n                        no-repeat center center`);\n    Crafty.stage.elem.style.backgroundSize = \"cover\";\n\n    this.iso = Crafty.diamondIso.init(mapGrid.TILE.WIDTH,\n                                       mapGrid.TILE.SURFACE_HEIGHT,\n                                       mapGrid.NUM_MAZE_ROWS,\n                                       mapGrid.NUM_MAZE_COLS);\n\n    socket.emit('setUpLoadingScene');\n\n    // set up loading scene\n    Crafty.scene('Loading', () => {\n      this.installStartGameListener();\n      this.setUpLoadingScene();\n      this.setUpDisconnect();\n    });\n\n    // set up the game scene\n    Crafty.scene('Game', (data) => {\n      this.setUpNewGame(data);\n      this.setUpPlayersMovement();\n      this.setUpPlacingWeapons();\n      this.setUpCreateDamage();\n      this.setUpHPChange();\n      this.setUpTimer();\n      this.setUpGameOver();\n      this.setUpAddBall();\n      this.setUpShowBall();\n      this.setUpShowBallRecord();\n      this.setUpHaveWeapon();\n    });\n\n    // set up game over scene\n    Crafty.scene('GameOver', (data) => {\n      clearInterval(this.playerMvtIntervalId);\n      this.showGameOver(data);\n    });\n\n    // start loading scene\n    Crafty.scene('Loading');\n  }\n\n  showGameOver(data) {\n    const rankedPlayerScoreLis = data.rankedPlayerScores.map((player, i) => {\n      const selfPlayerClass = player.playerColor === this.selfPlayerColor ?\n                                \"self-player\" :\n                                \"\";\n      const iconImgSrc = `../assets/icons/${ player.playerColor }_icon.png`;\n      return `<li class='${ player.playerColor } ${ selfPlayerClass }'>\n                <span>${ i + 1 }</span>\n                <img class=\"icon\" src=\"${ iconImgSrc }\"></img>\n                <span>${ player.longestBallHoldingTime }</span>\n              </li>`;\n    });\n\n    $(\".game-status\").html(`\n      <div class=\"results-container\">\n        <h1>GAME OVER</h1>\n        <div class=\"results container\">\n          <h2>SCORE</h2>\n          <h3 class=\"row-header\">PLAYER</h3>\n          <h3 class=\"row-header\">TIME RECORD</h3>\n          <ul class=\"ranking\">\n            ${ rankedPlayerScoreLis.join(\"\") }\n          </ul>\n        </div>\n      </div>\n    `);\n  }\n\n  installStartGameListener() {\n    // $(document).on('keydown', e => {\n    //   let spaceBarKeyCode = 32;\n    //   if (e.keyCode === spaceBarKeyCode) {\n    //     $(document).off('keydown');\n    //     socket.emit('startNewGame');\n    //   }\n    // });\n    $('.ready-form').on('click', '.ready', e => {\n      e.preventDefault();\n      socket.emit('clickReady', { playerId: this.selfId });\n      $('.ready-form button').prop('disabled', true);\n    });\n\n    $('.ready-form').on('click', '.cancel', e => {\n      e.preventDefault();\n      socket.emit('clickCancel', { playerId: this.selfId });\n      $('.ready-form button').prop('disabled', true);\n    });\n\n    socket.on('clickReady', () => {\n      $('.ready-form').html('<button class=\"cancel\">CANCEL</button>');\n      $('.ready-form button').prop('disabled', false);\n    });\n\n    socket.on('clickCancel', () => {\n      $('.ready-form').html('<button class=\"ready\">READY</button>');\n      $('.ready-form button').prop('disabled', false);\n    });\n  }\n\n  setUpLoadingScene() {\n    Crafty.load(AssetsObj);\n\n    socket.on('setUpGame', data => {\n      this.selfId = data.selfId;\n      this.selfPlayerColor = data.playerColor;\n      this.board = new Board(mapGrid.NUM_COLS, mapGrid.NUM_ROWS,\n                    data.seedRandomStr, Crafty);\n\n      $('.waiting-list').append(`<ul class=\"players-list\">\n                                    <h2>Player List</h2>\n                                  </ul>`);\n      this.appendToPlayersList(data.playerColor, true);\n    });\n\n    socket.on('addNewPlayer', data => {\n      this.appendToPlayersList(data.playerColor, false);\n      this.showPlayerReady(data.playerColor, data.playerReady);\n      this.handleDisableReadyButton(data.playerCount);\n    });\n\n    socket.on('othersClickReady', data => {\n      console.log('telling others!');\n      this.showPlayerReady(data.playerColor, data.playerReady);\n    });\n\n    socket.on('startNewGame', (data) => {\n      Crafty.scene('Game', data);\n    });\n  }\n\n  showPlayerReady(playerColor, playerReady) {\n    console.log(playerColor, playerReady);\n    if (playerReady) {\n      $(`.player-item.${ playerColor } .ready-text`).removeClass('hidden');\n    } else {\n      $(`.player-item.${ playerColor } .ready-text`).addClass('hidden');\n    }\n  }\n\n  setUpDisconnect() {\n    socket.on('othersDisconnected', data => {\n      if (this.players[data.playerId]) {\n        this.players[data.playerId].destroy();\n        delete this.players[data.playerId];\n      }\n\n      $(`.player-item.${ data.playerColor }`).remove();\n\n      this.handleDisableReadyButton(data.playerCount);\n    });\n  }\n\n  appendToPlayersList(playerColor, isSelfPlayer) {\n    let selfPlayerClass = isSelfPlayer ? 'self-player' : '';\n    let iconImgSrc = `../assets/icons/${ playerColor }_icon.png`;\n    $('.players-list').append(\n      `<li class=\"player-item ${ selfPlayerClass } ${ playerColor }\">\n          <img src=${ iconImgSrc }></img>\n          <span class=\"player-name\">Player ${ playerColor }</span>\n          <span class=\"ready-text hidden\">READY</span>\n        </li>`\n    );\n  }\n\n  setUpNewGame(data) {\n    this.setUpGameStatus(data);\n    this.createPlayerEntities(data);\n    this.createMapEntities();\n  }\n\n  setUpGameStatus(data) {\n    // add the game stage div in and remove the loading scene\n    $('.stage-container').removeClass('hidden');\n    $('.waiting-room').remove();\n    $('.waiting-list').remove();\n\n    // putting the timer on the screen\n    let timerMin = Math.floor(data.timer / 60);\n    let timerSec = data.timer % 60;\n    $('#game').append(`<div class=\"game-status\"></div>`);\n    $('.game-status').append(`<div class='timer-container container'>\n                                <div class='timer'>\n                                  <span class='time-left-text'>TIME LEFT:</span>\n                                  <div class=\"timer-min-div\">\n                                    <span class='timer-min'>${ timerMin }</span>\n                                    <span class='time-text'>MINS</span>\n                                  </div>\n                                  <div class=\"timer-sec-div\">\n                                    <span class='timer-sec'>${ timerSec }</span>\n                                    <span class='time-text'>SECS</span>\n                                  </div>\n                                </div>\n                              </div>`);\n\n    // putting the HP div on the screen\n    $('.game-status').append(`<div class=\"hp-container container\">\n                                  <ul class=\"hp-list\"></ul>\n                                </div>`);\n\n    // putting the weapon display on the screen\n    $('.game-status').append(`<div class=\"weapon-container container\">\n                                <img class=\"no-weapon-img\"\n                                      src=\"../assets/clear_sword5.png\">\n                              </div>`);\n\n    // putting scoreboard on the screen\n    $('.game-status').append(`<div class='scoreboard-container container'>\n                                <h2>Ranking</h2>\n                                <ul class='ranking'></ul>\n                              </div>`);\n  }\n\n  createPlayerEntities(data) {\n    data.players.forEach((playerInfo, idx) => {\n      let [playerX, playerY] = playerInfo.playerPx;\n      let [playerRow, playerCol] = playerInfo.playerPos;\n      let player;\n      let charSprite = `${ playerInfo.playerColor }Sprite`;\n      let selfPlayerClass;\n      if (parseInt(playerInfo.playerId) === this.selfId) {\n        player = Crafty.e(`SelfPlayer, SpriteAnimation, ${ charSprite }`)\n                  .setUpSocket(socket)\n                  .setUpSetBallTime()\n                  .bindingKeyEvents()\n                  .setUpMovesQueue()\n                  .attr({ w: mapGrid.PLAYER.WIDTH, h: mapGrid.PLAYER.HEIGHT });\n\n        this.iso.place(player, playerRow, playerCol, mapGrid.PLAYER.Z);\n\n        this.translateX = player.x - playerX;\n        this.translateY = player.y - playerY;\n\n        // since the player block always starts at bottom left corner\n        // when rendering, we need to account for the translation so we can\n        // render the player block in the top left corner instead\n        this.translateX += ((mapGrid.TILE.WIDTH - mapGrid.PLAYER.WIDTH) / 2);\n        this.translateY -=\n        ((mapGrid.TILE.SURFACE_HEIGHT - mapGrid.PLAYER.SURFACE_HEIGHT) / 2);\n        console.log(this.translateX);\n        console.log(this.translateY);\n\n        // for displaying purposes. showing the user his/her player color\n        selfPlayerClass = 'self-player';\n      } else {\n        player = Crafty.e(`SelfPlayer, SpriteAnimation, ${ charSprite }`);\n        selfPlayerClass = '';\n      }\n\n      player.setUp(playerInfo.playerId, playerInfo.playerColor)\n            .setUpAnimation()\n            .attr({ w: mapGrid.PLAYER.WIDTH, h: mapGrid.PLAYER.HEIGHT });\n\n      // place it on isometric map\n      this.iso.place(player, playerRow, playerCol, mapGrid.PLAYER.Z);\n\n      // after placing it on isometric map, figure out the translation of px\n      // from the server side to client side rendering\n      if (playerInfo.playerId === this.selfId) {\n        // this.translateX = player.x - playerX;\n        // this.translateY = player.y - playerY;\n        //\n        // // since the player block always starts at bottom left corner\n        // // when rendering, we need to account for the translation so we can\n        // // render the player block in the top left corner instead\n        // this.translateX += ((mapGrid.TILE.WIDTH - mapGrid.PLAYER.WIDTH) / 2);\n        // this.translateY -=\n        // ((mapGrid.TILE.SURFACE_HEIGHT - mapGrid.PLAYER.SURFACE_HEIGHT) / 2);\n        // console.log(this.translateX);\n        // console.log(this.translateY);\n      }\n\n      // translate the player px in the initial rendering as well\n      player.x += ((mapGrid.TILE.WIDTH - mapGrid.PLAYER.WIDTH) / 2);\n      player.y -=\n      ((mapGrid.TILE.SURFACE_HEIGHT - mapGrid.PLAYER.SURFACE_HEIGHT) / 2);\n\n      // putting each player's hp on the hp div\n      const HPLevelWidth = (player.HP / 100) * mapGrid.FULL_HP_BAR_WIDTH;\n      const iconImgSrc = `../assets/icons/${ playerInfo.playerColor}_icon.png`;\n      $('.hp-list').append(`\n        <li class=\"${ playerInfo.playerColor } ${ selfPlayerClass }\">\n          <span>${ playerInfo.playerColor }</span>\n          <div class=\"hp-bar\"\n             style=\"width: ${ mapGrid.FULL_HP_BAR_WIDTH }px;\">\n            <div class=\"hp-level\"\n                 style=\"width: ${ HPLevelWidth }px;\">\n            </div>\n          </div>\n        </li>`);\n\n      // scoreboard\n      $('.ranking').append(`<li class='${ playerInfo.playerColor }\n                                        ${ selfPlayerClass }'>\n                              <span>${ idx + 1 }</span>\n                              <img class=\"icon\" src=\"${ iconImgSrc }\"></img>\n                              <span>${ player.longestBallHoldingTime }\n                              </span>\n                            </li>`);\n\n      this.players[playerInfo.playerId] = player;\n\n      // put a listener on player movement\n    });\n\n    this.putPlayerMovementListener();\n  }\n\n  putPlayerMovementListener() {\n    let selfPlayer = this.players[this.selfId];\n    this.playerMvtIntervalId = setInterval(() => {\n      if (selfPlayer.charMove.right || selfPlayer.charMove.left ||\n          selfPlayer.charMove.up || selfPlayer.charMove.down) {\n        selfPlayer.moveIdx++;\n        console.log(selfPlayer.charMove);\n        socket.emit('updatePos', {\n          playerId: selfPlayer.playerId,\n          charMove: selfPlayer.charMove,\n          moveIdx: selfPlayer.moveIdx\n        });\n\n        // console.log('charMove', selfPlayer.copy(selfPlayer.charMove));\n        // client side prediction. push the pending move to the queue,\n        // then move according to what the pending move is\n        selfPlayer.pendingMoves.push(Object.assign({}, selfPlayer.charMove));\n        console.log('oldmvt', selfPlayer.x, selfPlayer.y);\n        let [newX, newY] = this.board.getNewPos(selfPlayer.charMove,\n                                                selfPlayer.x,\n                                                selfPlayer.y,\n                                                this.translateX,\n                                                this.translateY\n                                              );\n        console.log('new', newX, newY);\n\n        // account for the translation because the board class is based on\n        // the server side coordination\n        // if (!this.board.collideWithWall(newX - this.translateX,\n        //                                 newY - this.translateY)) {\n        selfPlayer.x = newX;\n        selfPlayer.y = newY;\n        // }\n        selfPlayer.displayAnimation(selfPlayer.charMove);\n        console.log('moveIdx', selfPlayer.moveIdx);\n        console.log('newmvt', selfPlayer.x, selfPlayer.y);\n      }\n\n    }, 20);\n\n  }\n\n  createMapEntities() {\n    for (let i = 0; i < mapGrid.NUM_MAZE_ROWS; i++) {\n      for (let j = 0; j < mapGrid.NUM_MAZE_COLS; j++) {\n        if (this.board.maze[i][j].isWall) {\n          const wallEntity =\n            Crafty.e('Actor, wallSprite')\n                  .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n          this.iso.place(wallEntity, i, j, mapGrid.TILE.Z);\n          this.tileBoard[i][j] = wallEntity;\n        } else {\n          const tileEntity =\n            Crafty.e('Tile')\n                  .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n          this.iso.place(tileEntity, i, j, mapGrid.TILE.Z);\n          this.tileBoard[i][j] = tileEntity;\n        }\n      }\n    }\n\n    Crafty.viewport.x = mapGrid.GAME_WIDTH / 2;\n    Crafty.viewport.y = (mapGrid.EXTRA_GAME_DIM / 2) + mapGrid.PLAYER.HEIGHT;\n  }\n\n  setUpPlayersMovement() {\n    socket.on('updatePos', data => {\n      const player = this.players[data.playerId];\n      console.log('got there? ');\n      console.log(player);\n      if (player) {\n        this.updatePosWithServerState(data, player);\n      }\n    });\n\n    socket.on('stopMovement', data => {\n      const player = this.players[data.playerId];\n      if (player) {\n        player.stopAnimation(data);\n      }\n    });\n  }\n\n  // server reconcilation. getting rid of the move inputs that we don't\n  // need anymore from the queue up until the movement updates the server\n  // side returns, and then applying the rest of the moves in the queue\n  // on top of the server state\n  updatePosWithServerState(data, player) {\n    console.log(this.selfId);\n    console.log(player.playerId);\n    console.log(parseInt(player.playerId) === parseInt(this.selfId));\n    console.log(parseInt(player.playerId) === this.selfId);\n    if (parseInt(player.playerId) === parseInt(this.selfId)) {\n      const clientAheadBy = player.moveIdx - data.moveIdx;\n      console.log('HERE WE GOOOOOOOOOOOOOOOOOOO');\n      console.log('clientahedby', clientAheadBy);\n      console.log('length', player.pendingMoves.length);\n      while (player.pendingMoves.length > clientAheadBy) {\n        // get rid of the move inputs we don't need\n        player.pendingMoves.shift();\n      }\n\n      this.updatePosWithRemainingMoves(data, player);\n    } else {\n      // no need to reconcile other player's movement\n      player.x = data.x;\n      player.y = data.y;\n    }\n  }\n\n  // applying the remaining moves that hasn't come back from server yet\n  // on top of the most recent server side update\n  updatePosWithRemainingMoves(data, player) {\n    let [x, y] = [data.x, data.y];\n    console.log('player', player);\n    console.log('pendingMoves', player.pendingMoves);\n    for (let i = 0; i < player.pendingMoves.length; i++) {\n      let charMove = player.pendingMoves[i];\n      console.log('applying thing', charMove);\n      console.log(x + this.translateX, y + this.translateY);\n      [x, y] = this.board.getNewPos(charMove, x, y);\n    }\n    console.log(x + this.translateX, y + this.translateY);\n\n    // apply the translation on top of the final x and Y\n    player.x = x + this.translateX;\n    player.y = y + this.translateY;\n  }\n\n  setUpPlacingWeapons() {\n    socket.on('addWeapon', data => {\n      const weapon = Crafty.e('Weapon')\n         .setUpStaticPos(data.row, data.col)\n         .setUp(data.type);\n\n      const sprite = `${ data.type }Sprite`;\n\n      weapon.addComponent(sprite);\n      weapon.attr({\n        w: mapGrid[data.type].WIDTH,\n        h: mapGrid[data.type].HEIGHT\n      });\n      this.weapons[[data.row, data.col]] = weapon;\n      this.iso.place(weapon, data.row, data.col, mapGrid[data.type].Z);\n\n      // translate the weapon px in the initial rendering to the middle of tile\n      weapon.x += ((mapGrid.TILE.WIDTH - mapGrid[data.type].WIDTH) / 2);\n    });\n\n    socket.on('destroyWeapon', data => {\n      const weapon = this.weapons[[data.row, data.col]];\n      weapon.destroy();\n    });\n  }\n\n  setUpCreateDamage() {\n    socket.on('createDamage', data => {\n      let activeComponent = `${ data.playerColor}ActiveTileSprite`;\n      this.tileBoard[data.row][data.col].removeComponent('tileSprite');\n      this.tileBoard[data.row][data.col].addComponent(activeComponent)\n                    .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n      this.tileBoard[data.row][data.col].damageDisappearAfter(activeComponent);\n    });\n  }\n\n  setUpHPChange() {\n    socket.on('HPChange', data => {\n      const player = this.players[data.playerId];\n      if (player) {\n        player.HP = data.playerHP;\n        const HPLevelWidth = (player.HP / 100) * mapGrid.FULL_HP_BAR_WIDTH;\n        $(`.hp-list .${ player.playerColor } .hp-level`)\n          .css(\"width\", HPLevelWidth);\n      }\n    });\n  }\n\n  setUpTimer() {\n    socket.on('countDown', data => {\n      let timerMin = Math.floor(data.timer / 60);\n      let timerSec = data.timer % 60;\n\n      $('.timer-min').text(timerMin);\n      $('.timer-sec').text(timerSec);\n    });\n  }\n\n  setUpGameOver() {\n    socket.on('gameOver', data => {\n      Crafty.scene('GameOver', data);\n    });\n  }\n\n  setUpAddBall() {\n    socket.on('addBall', data => {\n      this.ball = Crafty.e('Ball, ballSprite')\n          .attr({ w: mapGrid.BALL.WIDTH, h: mapGrid.BALL.HEIGHT });\n\n      this.iso.place(this.ball, data.row, data.col, mapGrid.BALL.Z);\n    });\n  }\n\n  setUpShowBall() {\n    socket.on('showBall', data => {\n      this.ball.destroy();\n      const player = this.players[data.playerId];\n      player.pickUpBall();\n      // add ball next to the player with the ball\n      $(`.ranking .${ data.playerColor }`).append(`\n          <div class=\"ball-holder\">\n            <img src=\"../assets/weapons/ASTAR_weapon.png\">\n            <span class=\"current-score\">${ data.currentBallHoldingTime }</span>\n          </div>\n        `);\n    });\n\n    socket.on('loseBall', data => {\n      this.players[data.playerId].loseBall();\n      $('.ball-holder').remove();\n    });\n  }\n\n  setUpShowBallRecord() {\n    socket.on('showScoreboard', data => {\n      const rankedPlayerScoreLis = data.rankedPlayerScores.map((player, i) => {\n        // The ball holder has the record of current ball holding time\n        const ballHolderDiv = data.playerColor === player.playerColor ?\n                                `<div class='ball-holder'>\n                                  <img src=\"../assets/weapons/ASTAR_weapon.png\">\n                                  <span>${ data.currentBallHoldingTime }</span>\n                                </div>` :\n                                \"\";\n\n        const selfPlayerClass = player.playerColor === this.selfPlayerColor ?\n                                    \"self-player\" :\n                                    \"\";\n        const iconImgSrc = `../assets/icons/${ player.playerColor }_icon.png`;\n        return `<li class='${ player.playerColor } ${ selfPlayerClass }'>\n                  <span>${ i + 1 }</span>\n                  <img class=\"icon\" src=\"${ iconImgSrc }\"></img>\n                  <span>${ player.longestBallHoldingTime }</span>\n                  ${ ballHolderDiv }\n                </li>`;\n      });\n\n      $('.ranking').html(rankedPlayerScoreLis.join(''));\n    });\n  }\n\n  setUpHaveWeapon() {\n    socket.on('pickUpWeapon', data => {\n      this.players[this.selfId].weaponType = data.type;\n      let imgSrc = `../assets/weapons/${ data.type }_weapon_diagonal.png`;\n      $('.weapon-container').html(`<img src=${ imgSrc }>\n                                      <span class=\"weapon-type\">\n                                        ${ data.type }\n                                      </span>\n                                    `);\n    });\n\n    socket.on('loseWeapon', data => {\n      this.players[data.playerId].loseWeapon();\n      $('.weapon-container').html(`<img class=\"no-weapon-img\"\n                                          src=\"../assets/clear_sword5.png\">`\n                                    );\n    });\n  }\n}\n\nexport default Game;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/game.js\n **/","var createComponents = require('./components.js');\nvar createPlayerComponent = require('./player.js');\nvar createWeaponComponent = require('./weapon.js');\nvar createBallComponent = require('./ball.js');\nconst Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\n\nmodule.exports = function(Crafty) {\n  // change name of the html element to stage\n  Crafty.init(mapGrid.GAME_WIDTH, mapGrid.GAME_HEIGHT, 'stage');\n  console.log(mapGrid.GAME_WIDTH);\n  console.log(mapGrid.GAME_HEIGHT);\n\n  createComponents(Crafty);\n  createPlayerComponent(Crafty);\n  createWeaponComponent(Crafty);\n  createBallComponent(Crafty);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/init.js\n **/","const Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\nconst wallDirection = Constants.wallDirection;\nconst gameSettings = Constants.gameSettings;\n/* globals Crafty */\n\nlet epsilon = 0.000000001;\n\nmodule.exports = function(Crafty) {\n  Crafty.c('Cell', {\n    init: function() {\n      this.attr({\n        w: mapGrid.TILE.WIDTH,\n        h: mapGrid.TILE.HEIGHT\n      });\n    },\n\n    at: function(row, col) {\n      // the amount to move from one neighbor to the other\n      const w = (mapGrid.TILE.WIDTH / 2);\n      const h = (mapGrid.TILE.WIDTH / 4);\n\n      const x = (row - col) * w;\n      const y = (row + col) * h;\n      this.attr({ x: x, y: y });\n      return this;\n    },\n\n    getRowsCols: function() {\n      const w = (mapGrid.TILE.WIDTH / 2);\n      const h = (mapGrid.TILE.SURFACE_HEIGHT / 2);\n\n      const xOverW = this.x / w;\n      const yOverH = this.y / h;\n\n      // (x/w) + (y/h) = 2*r\n      const row = this.fixRoundingErrors((xOverW + yOverH) / 2);\n      const col = this.fixRoundingErrors(row - xOverW);\n\n      // const bottomRightX = this.x + mapGrid.PLAYER_WIDTH;\n      // const bottomRightY = this.y + mapGrid.SURFACE_HEIGHT;\n      // const xOverWBR = bottomRightX / w;\n      // const yOverHBR = bottomRightY / h;\n      // const rowBR = this.fixRoundingErrors((xOverWBR + yOverHBR) / 2);\n      // const colBR = this.fixRoundingErrors(rowBR - xOverWBR);\n\n      // finding all the rows it is at\n      let rows = [Math.floor(row)];\n      // if (((row - Math.floor(row)) * w - (mapGrid.PLAYER_WIDTH / 2)) > epsilon) {\n\n      // if the offset of the block + half the width of the block is more than\n      // the width of half a tile, then it is overlapping two rows\n      let spaceOccupyingX = (row - Math.floor(row)) * w\n                              + (mapGrid.PLAYER.WIDTH / 2);\n      if ((spaceOccupyingX - w) > epsilon) {\n        // console.log('really?');\n        // console.log((row - Math.floor(row)) * w);\n        // console.log(mapGrid.PLAYER_WIDTH / 2);\n        // console.log(w);\n        rows.push(Math.ceil(row));\n      }\n\n      // finding all the cols it is at\n      let cols = [Math.floor(col)];\n      // if (Math.floor(col) !== Math.floor(colBR)) {\n      let spaceOccupyingY = (col - Math.floor(col)) * h\n                            + (mapGrid.PLAYER.SURFACE_HEIGHT / 2);\n      if ((spaceOccupyingY - h) > epsilon) {\n        // rows.push(Math.floor(colBR));\n        cols.push(Math.ceil(col));\n      }\n      // if (Math.floor(col) !== Math.ceil(col)) {\n      // if ((col - Math.floor(col)) * h - (mapGrid.PLAYER_WIDTH / 4) > epsilon) {\n      //   cols.push(Math.ceil(col));\n      // }\n\n      return [rows, cols];\n    },\n\n    // account for the floating point epsilon\n    fixRoundingErrors: function(n) {\n      return (Math.abs(n - Math.round(n)) <= epsilon) ? Math.round(n) : n;\n    },\n\n    getTopLeftRowCol: function() {\n      let [rows, cols] = this.getRowsCols();\n      return [rows[0], cols[0]];\n    }\n  });\n\n  Crafty.c('Actor', {\n    init: function() {\n      this.requires('2D, DOM, Cell');\n    },\n  });\n\n  Crafty.c('Item', {\n    init: function() {\n\n    },\n\n    // for items that are in a static position\n    setUpStaticPos(row, col) {\n      this.staticRow = row;\n      this.staticCol = col;\n      return this;\n    }\n  });\n\n  Crafty.c('Tile', {\n    init: function() {\n      this.requires('2D, DOM, tileSprite');\n    },\n\n    damageDisappearAfter: function(activeTileSprite) {\n      window.setTimeout(() => {\n        this.removeComponent(activeTileSprite);\n        this.addComponent('tileSprite')\n            .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n      }, gameSettings.DAMAGE_DISAPPEAR_TIME);\n    }\n  });\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/components.js\n **/","const NUM_ROWS = 8;\nconst NUM_COLS = 8;\nconst NUM_MAZE_ROWS =  NUM_ROWS * 2 - 1;\nconst NUM_MAZE_COLS = NUM_COLS * 2 - 1;\nconst EXTRA_GAME_DIM = 50;\n\nconst TILE = {\n  ORIG_WIDTH: 101,\n  ORIG_HEIGHT: 122,\n  RATIO: 3 / 4,\n  Z: 0\n};\n\nconst PLAYER = {\n  ORIG_WIDTH: 40,\n  ORIG_HEIGHT: 54,\n  RATIO: 1\n};\n\nconst PLAYER_ATTACKING = {\n  ORIG_WIDTH: 51,\n  ORIG_HEIGHT: 54,\n  RATIO: 1\n};\n\nconst BALL = {\n  ORIG_WIDTH: 128,\n  ORIG_HEIGHT: 128,\n  RATIO: 2 / 5\n};\n\nconst BFS = {\n  ORIG_WIDTH: 155,\n  ORIG_HEIGHT: 363,\n  RATIO: 1 / 4\n};\n\nconst DFS = {\n  ORIG_WIDTH: 128,\n  ORIG_HEIGHT: 313,\n  RATIO: 1 / 4\n};\n\nconst ASTAR = {\n  ORIG_WIDTH: 128,\n  ORIG_HEIGHT: 128,\n  RATIO: 2 / 5\n};\n\nconst actors = [TILE, PLAYER, PLAYER_ATTACKING, BALL, BFS, DFS, ASTAR];\n\nactors.forEach(actor => {\n  actor.WIDTH = actor.ORIG_WIDTH * actor.RATIO;\n  actor.HEIGHT = actor.ORIG_HEIGHT * actor.RATIO;\n  actor.SURFACE_HEIGHT = actor.WIDTH / 2;\n});\n\nactors.slice(1).forEach(actor => {\n  const y0 = (TILE.HEIGHT / TILE.SURFACE_HEIGHT - 2) * TILE.SURFACE_HEIGHT;\n  // need to increase it by player depth\n  const y1 = y0 + (PLAYER.HEIGHT - PLAYER.SURFACE_HEIGHT);\n  // finding the z layer based on the craftyjs code\n  actor.Z = (y1 - ((PLAYER.HEIGHT / TILE.SURFACE_HEIGHT - 2) *\n              PLAYER.SURFACE_HEIGHT)) / TILE.SURFACE_HEIGHT;\n  // actor.Z = ((PLAYER.HEIGHT - PLAYER.SURFACE_HEIGHT) /\n  //           ((TILE.HEIGHT - TILE.SURFACE_HEIGHT) / ACTOR_Z)) + 1;\n  // actor.Z = (((PLAYER_HEIGHT / TILE.SURFACE_HEIGHT) - 2) * TILE.SURFACE_HEIGHT\n});\n\nconst mapGrid = {\n  GAME_WIDTH: NUM_MAZE_ROWS * TILE.WIDTH + EXTRA_GAME_DIM,\n  GAME_HEIGHT: NUM_MAZE_COLS * TILE.SURFACE_HEIGHT\n                + PLAYER.HEIGHT + EXTRA_GAME_DIM,\n  EXTRA_GAME_DIM: EXTRA_GAME_DIM,\n  NUM_ROWS: NUM_ROWS,\n  NUM_COLS: NUM_COLS,\n  NUM_MAZE_ROWS: NUM_MAZE_ROWS,\n  NUM_MAZE_COLS: NUM_MAZE_COLS,\n  TILE: TILE,\n  PLAYER: PLAYER,\n  // PLAYER_ATTACKING: PLAYER_ATTACKING,\n  BALL: BALL,\n  BFS: BFS,\n  DFS: DFS,\n  ASTAR: ASTAR,\n  CHAR_STEP: 20, // how many steps it needs from one tile to another\n  FULL_HP_BAR_WIDTH: 130\n};\n\nconst weaponTypes = {\n  BFS: 'BFS',\n  DFS: 'DFS',\n  ASTAR: 'ASTAR'\n};\n\nconst gameSettings = {\n  WEAPON_RANGE: 10,\n  BUFFER_DAMAGE_TIME: 1000,\n  BUFFER_SHOOTING_TIME: 1500,\n  WEAPON_SPAWN_TIME: 10000,\n  DAMAGE_ANIMATION_TIME: 100,\n  DAMAGE_DISAPPEAR_TIME: 1000,\n  HP_DAMAGE: 10,\n  GAME_DURATION: 200, // 200\n  CHECK_COLLISION_INTERVAL: 200,\n  COLORS: ['blue', 'red', 'yellow', 'green']\n};\n\nmodule.exports = {\n  mapGrid: mapGrid,\n  weaponTypes: weaponTypes,\n  gameSettings: gameSettings\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/constants.js\n **/","/* globals Crafty */\n/* globals Queue */\nconst Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\nconst wallDirection = Constants.wallDirection;\n\nmodule.exports = function(Crafty) {\n  Crafty.c('SelfPlayer', {\n    init: function() {\n      this.requires('Player');\n      this.charStep = mapGrid.CHAR_STEP;\n      this.hasTakenDamage = false;\n      this.weaponType = null;\n      this.weaponCoolingdown = false;\n      this.z = 9;\n    },\n\n    setUpMovesQueue() {\n      this.pendingMoves = [];\n      // each movement has a number to it, to help client side prediction\n      this.moveIdx = 0;\n      return this;\n    },\n\n    bindingKeyEvents() {\n      this.charMove = { left: false, right: false, up: false, down: false };\n\n      // this.bind('EnterFrame', (data) => {\n      //   if (this.charMove.right || this.charMove.left ||\n      //       this.charMove.up || this.charMove.down) {\n      //     this.moveIdx++;\n      //     // console.log(this.charMove);\n      //     this.socket.emit('updatePos', {\n      //       playerId: this.playerId,\n      //       charMove: this.charMove,\n      //       moveIdx: this.moveIdx\n      //     });\n      //\n      //     // console.log('charMove', this.copy(this.charMove));\n      //     // client side prediction. push the pending move to the queue,\n      //     // then move according to what the pending move is\n      //     this.pendingMoves.push(Object.assign({}, this.charMove));\n      //     let [newX, newY] = this.getNewPos(this.charMove, this.x, this.y);\n      //     this.x = newX;\n      //     this.y = newY;\n      //     this.displayAnimation(this.charMove);\n      //     // console.log('moveIdx', this.moveIdx);\n      //     // console.log('newmvt', newX, newY);\n      //   }\n      // });\n\n      this.bind('KeyDown', e => {\n        e.originalEvent.preventDefault();\n        if (e.keyCode === Crafty.keys.Z) {\n          this.pickUpWeapon();\n          return;\n        }\n\n        if (e.keyCode === Crafty.keys.X && this.weaponType !== null) {\n          this.shootWeapon();\n          return;\n        }\n\n        this.charMove.left = false;\n        this.charMove.right = false;\n        this.charMove.down = false;\n        this.charMove.up = false;\n\n        if (e.keyCode === Crafty.keys.RIGHT_ARROW) {\n          this.charMove.right = true;\n        }\n        if (e.keyCode === Crafty.keys.LEFT_ARROW) {\n          this.charMove.left = true;\n        }\n        if (e.keyCode === Crafty.keys.UP_ARROW) {\n          this.charMove.up = true;\n        }\n        if (e.keyCode === Crafty.keys.DOWN_ARROW) {\n          this.charMove.down = true;\n        }\n      });\n\n      this.bind('KeyUp', e => {\n        if (e.keyCode === Crafty.keys.RIGHT_ARROW) {\n          this.charMove.right = false;\n        }\n        if (e.keyCode === Crafty.keys.LEFT_ARROW) {\n          this.charMove.left = false;\n        }\n        if (e.keyCode === Crafty.keys.UP_ARROW) {\n          this.charMove.up = false;\n        }\n        if (e.keyCode === Crafty.keys.DOWN_ARROW) {\n          this.charMove.down = false;\n        }\n        this.socket.emit('stopMovement', {\n          playerId: this.playerId,\n          keyCode: e.keyCode\n        });\n      });\n\n      return this;\n    },\n\n    // getDir(charMove) {\n    //   let dirX, dirY;\n    //   if (charMove.left) {\n    //     dirX = -1;\n    //     dirY = -1;\n    //   } else if (charMove.right) {\n    //     dirX = 1;\n    //     dirY = 1;\n    //   } else if (charMove.up) {\n    //     dirX = 1;\n    //     dirY = -1;\n    //   } else if (charMove.down) {\n    //     dirX = -1;\n    //     dirY = 1;\n    //   }\n    //\n    //   return [dirX, dirY];\n    // },\n    //\n    // getNewPos(charMove, x, y) {\n    //   let [dirX, dirY] = this.getDir(charMove);\n    //   return this.moveDir(x, y, dirX, dirY);\n    // },\n    //\n    // moveDir(x, y, dirX, dirY) {\n    //   // the offset it needs to move to the neighbor blocks\n    //   const w = mapGrid.TILE.WIDTH / 2;\n    //   const h = mapGrid.TILE.SURFACE_HEIGHT / 2;\n    //\n    //   const newX = x + (w / this.charStep) * dirX;\n    //   const newY = y + (h / this.charStep) * dirY;\n    //   return [newX, newY];\n    // },\n\n    // updatePos(data, translateX, translateY) {\n    //   this.x = data.x + translateX;\n    //   this.y = data.y + translateY;\n    //   console.log(data.moveIdx);\n    //\n    //   this.displayAnimation(data.charMove);\n    // },\n    //\n    // server reconcilation. getting rid of the move inputs that we don't\n    // need anymore from the queue up until the movement updates the server\n    // side returns, and then applying the rest of the moves in the queue\n    // on top of the server state\n    updatePosWithServerState(data, translateX, translateY) {\n      const clientAheadBy = this.moveIdx - data.moveIdx;\n      console.log('clientahedby', clientAheadBy);\n      console.log('length', this.pendingMoves.length);\n      while (this.pendingMoves.length > clientAheadBy) {\n        // get rid of the move inputs we don't need\n        this.pendingMoves.shift();\n      }\n\n      this.updatePosWithRemainingMoves(data, translateX, translateY);\n    },\n\n    // applying the remaining moves that hasn't come back from server yet\n    // on top of the most recent server side update\n    updatePosWithRemainingMoves(data, translateX, translateY) {\n      let [x, y] = [data.x, data.y];\n      for (let i = 0; i < this.pendingMoves.length; i++) {\n        let charMove = this.pendingMoves[i];\n        console.log('applying thing', charMove);\n        console.log(x + translateX, y + translateY);\n        [x, y] = this.getNewPos(charMove, x, y);\n      }\n      console.log(x + translateX, y + translateY);\n\n      // apply the translation on top of the final x and Y\n      this.x = x + translateX;\n      this.y = y + translateY;\n    },\n\n    stopAnimation(data) {\n      if (data.keyCode === Crafty.keys.RIGHT_ARROW) {\n        if (this.isPlaying('PlayerMovingRight')) this.pauseAnimation();\n      }\n      if (data.keyCode === Crafty.keys.LEFT_ARROW) {\n        if (this.isPlaying('PlayerMovingLeft')) this.pauseAnimation();\n      }\n      if (data.keyCode === Crafty.keys.UP_ARROW) {\n        if (this.isPlaying('PlayerMovingUp')) this.pauseAnimation();\n      }\n      if (data.keyCode === Crafty.keys.DOWN_ARROW) {\n        if (this.isPlaying('PlayerMovingDown')) this.pauseAnimation();\n      }\n    },\n\n    setUpSocket: function(socket) {\n      this.socket = socket;\n      return this;\n    },\n\n    setUpSetBallTime: function() {\n      this.socket.on('setBallTime', data => {\n        this.currentBallHoldingTime = data.currentBallHoldingTime;\n        this.longestSecsHoldingBall = data.longestSecsHoldingBall;\n      });\n\n      return this;\n    },\n\n    pickUpWeapon: function() {\n      this.socket.emit('pickUpWeapon', {\n        playerId: this.playerId\n      });\n    },\n\n    shootWeapon: function() {\n      this.socket.emit('shootWeapon', {\n        playerId: this.playerId\n      });\n    },\n\n    loseWeapon: function() {\n      this.weaponType = null;\n    }\n\n  });\n\n  Crafty.c('OtherPlayer', {\n    init: function() {\n      this.requires('Player');\n    },\n\n    updatePosWithServerState(data, translateX, translateY) {\n      this.x = data.x + translateX;\n      this.y = data.y + translateY;\n\n      this.displayAnimation(data.charMove);\n    }\n  });\n\n  Crafty.c('Player', {\n    init: function() {\n      this.requires('Actor');\n      this.HP = 100;\n      this.longestBallHoldingTime = 0;\n      this.currentBallHoldingTime = 0;\n    },\n\n    displayAnimation: function(charMove) {\n      // display the animation movement depending on the char move\n      if (charMove.left && !this.isPlaying('PlayerMovingLeft')) {\n        this.animate('PlayerMovingLeft', -1);\n        this.unflip('X');\n      } else if (charMove.down &&\n        !this.isPlaying('PlayerMovingDown')) {\n          this.animate('PlayerMovingDown', -1);\n          this.unflip('X');\n      } else if (charMove.up && !this.isPlaying('PlayerMovingUp')) {\n        this.animate('PlayerMovingUp', -1);\n        this.flip('X');\n      } else if (charMove.right &&\n        !this.isPlaying('PlayerMovingRight')) {\n          this.animate('PlayerMovingRight', -1);\n          this.flip('X');\n      }\n    },\n\n    loseWeapon: function() {\n\n    },\n\n    setUpAnimation: function() {\n      this.reel('PlayerMovingRight', 600, 0, 1, 5);\n      this.reel('PlayerMovingDown', 600, 0, 1, 5);\n      this.reel('PlayerMovingUp', 600, 0, 2, 5);\n      this.reel('PlayerMovingLeft', 600, 0, 2, 5);\n      return this;\n    },\n\n    setUp: function(playerId, playerColor) {\n      this.playerId = playerId;\n      if (playerColor) {\n        this.playerColor = playerColor;\n      }\n      return this;\n    },\n\n    pickUpBall: function() {\n      this.addComponent('purpleSprite');\n      this.removeComponent(`${ this.playerColor }Sprite`);\n      return this;\n    },\n\n    loseBall: function() {\n      this.addComponent(`${ this.playerColor }Sprite`);\n      this.removeComponent('purpleSprite');\n      return this;\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/player.js\n **/","/* globals Crafty */\n\nmodule.exports = function(Crafty) {\n  Crafty.c('Weapon', {\n    init: function() {\n      this.requires('Actor, Item');\n    },\n\n    setUp: function(type) {\n      this.type = type;\n      return this;\n    }\n  });\n\n  Crafty.c('Damage', {\n    init: function() {\n      this.requires('Actor, Item');\n      this.checkCollisionInterval = null;\n    },\n\n    setUpCreator(playerId) {\n      this.creatorId = playerId;\n      return this;\n    },\n\n    disappearAfter(disappearTime) {\n      setTimeout(() => {\n        if (this.checkCollisionInterval) {\n          clearInterval(this.checkCollisionInterval);\n        }\n        this.destroy();\n      }, disappearTime);\n      return this;\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/weapon.js\n **/","/* globals Crafty */\n\nmodule.exports = function(Crafty) {\n  Crafty.c('Ball', {\n    init: function() {\n      this.requires('Actor, Item');\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/ball.js\n **/","const Constants = require('./constants.js');\nconst mapGrid = Constants.mapGrid;\nconst Cell = require('./cell.js');\n\nlet epsilon = 0.000000001;\n\nclass Board {\n  constructor(m, n, seedRandomStr) {\n    // how many cells rows and cols are there if walls were just borders\n    this.numGridRows = m;\n    this.numGridCols = n;\n    // for the 2d array with the walls as part of the cells\n    this.numMazeCols = (2 * n) - 1;\n    this.numMazeRows = (2 * m) - 1;\n\n    Math.seedrandom(seedRandomStr);\n    this.maze = this.createStartingMaze();\n    this.frontier = [];\n    this.generateMaze();\n    this.charStep = mapGrid.CHAR_STEP;\n  }\n\n  // create a starting maze map with all the walls\n  createStartingMaze() {\n    let maze = new Array(this.numMazeRows);\n    for (let i = 0; i < maze.length; i++) {\n      maze[i] = new Array(this.numMazeCols);\n      for (let j = 0; j < this.numMazeCols; j++) {\n        if (i % 2 === 1) {\n          // the odd number rows are all filled with wall\n          maze[i][j] = new Cell(true);\n        } else {\n          // the odd number cols are walls and the even number cols are spaces\n          maze[i][j] = (j % 2 === 1) ? new Cell(true) : new Cell(false);\n        }\n      }\n    }\n    return maze;\n  }\n\n  gridToMazePos(row, col) {\n    return [row * 2, col * 2];\n  }\n\n  log(maze) {\n    let maz = maze.map(row => {\n      return row.map(tile => {\n        if (tile.isWall) return 1;\n        if (!tile.isWall) return 0;\n      });\n    });\n    console.table(maz);\n  }\n\n  // getting direct neighbor tiles that are not walls\n  getNeighborTiles(row, col) {\n    let dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    let neighborTiles = dirs.map(dir => {\n      let [dRow, dCol] = dir;\n      return [row + dRow, col + dCol];\n    });\n\n    // return the tiles that are in the grid and\n    // tiles that are not walls\n    return neighborTiles.filter(([tileRow, tileCol]) => {\n      return this.isInGrid(tileRow, tileCol) &&\n        !this.maze[tileRow][tileCol].isWall;\n    });\n  }\n\n  // getting the neighbor cells separated by a wall\n  getNeighborSpace(row, col) {\n    let dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    let neighbors = [];\n    dirs.forEach(dir => {\n      // multiplying by 2 to account for the wall in between\n      let [newRow, newCol] = [row + dir[0] * 2, col + dir[1] * 2];\n      if (this.isInGrid(newRow, newCol)) {\n        // ensure that we are not adding walls\n        if (this.maze[newRow][newCol].isWall === true) {\n          throw \"Error: adding walls to the neighbor space array\";\n        }\n\n        neighbors.push([newRow, newCol]);\n      }\n    });\n\n    return neighbors;\n  }\n\n  // the forefront surrounding the cells that are in the maze\n  addFrontiers(row, col) {\n    this.getNeighborSpace(row, col).forEach(cell => {\n      let [newRow, newCol] = cell;\n      if (!this.maze[newRow][newCol].isInMaze &&\n          !this.maze[newRow][newCol].hasBeenFrontier) {\n        this.frontier.push([newRow, newCol]);\n        this.maze[newRow][newCol].hasBeenFrontier = true;\n      }\n    });\n  }\n\n  isInGrid(row, col) {\n    return 0 <= row && row < this.numMazeRows &&\n           0 <= col && col < this.numMazeCols;\n  }\n\n  inMazeNeighbors(row, col) {\n    return this.getNeighborSpace(row, col).filter(cell => {\n      let [newRow, newCol] = cell;\n      return this.maze[newRow][newCol].isInMaze;\n    });\n  }\n\n  expandMaze(row, col) {\n    this.maze[row][col].isInMaze = true;\n    this.addFrontiers(row, col);\n  }\n\n  getRandomCell() {\n    const randomRow = Math.floor(Math.random() * (this.numGridRows - 1));\n    const randomCol = Math.floor(Math.random() * (this.numGridCols - 1));\n\n    return this.gridToMazePos(randomRow, randomCol);\n  }\n\n  // breaking the wall between [row, col] and [otherRow, otherCol]\n  breakWall(row, col, otherRow, otherCol) {\n    if ((otherRow < row) && col === otherCol) { // other cell is on top of cell\n      this.maze[row - 1][col].isWall = false;\n    } else if ((otherRow > row) && col === otherCol) { // other cell is bottom\n      this.maze[row + 1][col].isWall = false;\n    } else if ((otherCol < col) && row === otherRow) { // other cell is left\n      this.maze[row][col - 1].isWall = false;\n    } else if ((otherCol > col) && row === otherRow) { // other cell is right\n      this.maze[row][col + 1].isWall = false;\n    }\n  }\n\n  generateMaze() {\n    let [randomCol, randomRow] = this.getRandomCell();\n    this.expandMaze(randomRow, randomCol);\n\n    // find a random frontier, find a random neighbor of that frontier,\n    // and break the walls between them\n    while (this.frontier.length !== 0) {\n      const randomIndex = Math.floor(Math.random() * this.frontier.length);\n      const [randomPos] = this.frontier.splice(randomIndex, 1);\n      const [row, col] = randomPos;\n      const neighbors = this.inMazeNeighbors(row, col);\n      const [neighRow, neighCol] =\n        neighbors[Math.floor(Math.random() * neighbors.length)];\n\n      this.breakWall(row, col, neighRow, neighCol);\n      this.expandMaze(row, col);\n    }\n  }\n\n  // checking if player's current position is colliding with a wall or\n  // if it is out of the grid\n\n  // based on server side coordination\n  collideWithWall(playerX, playerY, translateX, translateY) {\n    // check if there is translation offset (from the client side)\n    let translatedX = translateX ? playerX - translateX : playerX\n    let translatedY = translateY ? playerY - translateY : playerY\n\n    let [rows, cols] = this.getRowsCols(translatedX, translatedY);\n        // if (print) {\n        //   console.log('rows, cols', rows, cols);\n        // }\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < cols.length; j++) {\n        if (!this.isInGrid(rows[i], cols[j]) ||\n        this.maze[rows[i]][cols[j]].isWall) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  getRowsCols(x, y) {\n    const w = (mapGrid.TILE.WIDTH / 2);\n    const h = (mapGrid.TILE.SURFACE_HEIGHT / 2);\n\n    const xOverW = x / w;\n    const yOverH = y / h;\n\n    // (x/w) + (y/h) = 2*r\n    const row = this.fixRoundingErrors((xOverW + yOverH) / 2);\n    const col = this.fixRoundingErrors(row - xOverW);\n\n    // finding all the rows it is at\n    let rows = [Math.floor(row)];\n\n    // if the offset of the block + half the width of the block is more than\n    // the width of half a tile, then it is overlapping two rows\n    let spaceOccupyingX = (row - Math.floor(row)) * w\n                            + (mapGrid.PLAYER.WIDTH / 2);\n    if ((spaceOccupyingX - w) > epsilon) {\n      rows.push(Math.ceil(row));\n    }\n\n    // finding all the cols it is at\n    let cols = [Math.floor(col)];\n    let spaceOccupyingY = (col - Math.floor(col)) * h\n                            + (mapGrid.PLAYER.SURFACE_HEIGHT / 2);\n    if ((spaceOccupyingY - h) > epsilon) {\n      cols.push(Math.ceil(col));\n    }\n\n    return [rows, cols];\n  }\n\n  // account for the floating point epsilon\n  fixRoundingErrors(n) {\n    return (Math.abs(n - Math.round(n)) <= epsilon) ? Math.round(n) : n;\n  }\n\n  getTopLeftRowCol() {\n    let [rows, cols] = this.getRowsCols();\n    return [rows[0], cols[0]];\n  }\n\n  getDir(charMove) {\n    let dirX, dirY;\n    if (charMove.left) {\n      dirX = -1;\n      dirY = -1;\n    } else if (charMove.right) {\n      dirX = 1;\n      dirY = 1;\n    } else if (charMove.up) {\n      dirX = 1;\n      dirY = -1;\n    } else if (charMove.down) {\n      dirX = -1;\n      dirY = 1;\n    }\n\n    return [dirX, dirY];\n  }\n\n  // giving the player x, y and direction, return the player's new position\n  getNewPos(charMove, playerX, playerY, translateX, translateY) {\n    let [dirX, dirY] = this.getDir(charMove);\n    return this.moveDir(playerX, playerY, dirX, dirY, translateX, translateY);\n  }\n\n  moveDir(x, y, dirX, dirY, translateX, translateY) {\n    // the offset it needs to move to the neighbor blocks\n    const w = mapGrid.TILE.WIDTH / 2;\n    const h = mapGrid.TILE.SURFACE_HEIGHT / 2;\n\n    const newX = x + (w / this.charStep) * dirX;\n    const newY = y + (h / this.charStep) * dirY;\n\n    // check for wall collision\n    if (this.collideWithWall(newX, newY, translateX, translateY)) {\n      return [x, y];\n    } else {\n      return [newX, newY];\n    }\n  }\n}\n\nmodule.exports = Board;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/board.js\n **/","class Cell {\n  constructor(isWall) {\n    this.isWall = isWall;\n    this.isInMaze = false;\n    this.hasBeenFrontier = false;\n  }\n}\n\nmodule.exports = Cell;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/cell.js\n **/","const Constants = require('./constants.js');\nconst mapGrid = Constants.mapGrid;\n\nconst assetsObj = {\n  'sprites': {\n    '../assets/tiles.png': {\n      'tile': mapGrid.TILE.ORIG_WIDTH,\n      'tileh': mapGrid.TILE.ORIG_HEIGHT,\n      'map': {\n        'tileSprite': [0, 0],\n        'blueActiveTileSprite': [1, 0],\n        'redActiveTileSprite': [2, 0],\n        'yellowActiveTileSprite': [3, 0],\n        'greenActiveTileSprite': [4, 0],\n        'purpleActiveTileSprite': [5, 0],\n        'wallSprite': [6, 0],\n      }\n    },\n    '../assets/char/green_char.png': {\n      'tile': mapGrid.PLAYER.ORIG_WIDTH,\n      'tileh': mapGrid.PLAYER.ORIG_HEIGHT,\n      'map': {\n        'greenSprite': [0, 0]\n      }\n    },\n    '../assets/char/blue_char.png': {\n      'tile': mapGrid.PLAYER.ORIG_WIDTH,\n      'tileh': mapGrid.PLAYER.ORIG_HEIGHT,\n      'map': {\n        'blueSprite': [0, 0]\n      }\n    },\n    '../assets/char/red_char.png': {\n      'tile': mapGrid.PLAYER.ORIG_WIDTH,\n      'tileh': mapGrid.PLAYER.ORIG_HEIGHT,\n      'map': {\n        'redSprite': [0, 0]\n      }\n    },\n    '../assets/char/yellow_char.png': {\n      'tile': mapGrid.PLAYER.ORIG_WIDTH,\n      'tileh': mapGrid.PLAYER.ORIG_HEIGHT,\n      'map': {\n        'yellowSprite': [0, 0]\n      }\n    },\n    '../assets/char/purple_char.png': {\n      'tile': mapGrid.PLAYER.ORIG_WIDTH,\n      'tileh': mapGrid.PLAYER.ORIG_HEIGHT,\n      'map': {\n        'purpleSprite': [0, 0]\n      }\n    },\n    '../assets/weapons/ASTAR_weapon.png': {\n      'tile': mapGrid.BALL.ORIG_WIDTH,\n      'tileh': mapGrid.BALL.ORIG_HEIGHT,\n      'map': {\n        'ballSprite': [0, 0],\n        'ASTARSprite': [0, 0]\n      }\n    },\n    '../assets/weapons/BFS_weapon.png': {\n      'tile': mapGrid.BFS.ORIG_WIDTH,\n      'tileh': mapGrid.BFS.ORIG_HEIGHT,\n      'map': {\n        'BFSSprite': [0, 0]\n      }\n    },\n    '../assets/weapons/DFS_weapon.png': {\n      'tile': mapGrid.DFS.ORIG_WIDTH,\n      'tileh': mapGrid.DFS.ORIG_HEIGHT,\n      'map': {\n        'DFSSprite': [0, 0]\n      }\n    }\n  }\n};\n\nmodule.exports = assetsObj;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/load_assets.js\n **/"],"sourceRoot":""}