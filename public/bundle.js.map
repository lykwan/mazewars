{"version":3,"sources":["webpack:///webpack/bootstrap 2ac692453ad331003652","webpack:///./public/src/index.js","webpack:///./public/src/game.js","webpack:///./public/src/components/init.js","webpack:///./public/src/components/components.js","webpack:///./public/src/constants.js","webpack:///./public/src/components/player.js","webpack:///./public/src/components/weapon.js","webpack:///./public/src/components/ball.js","webpack:///./public/src/model/client_model.js","webpack:///./public/src/board.js","webpack:///./public/src/cell.js"],"names":["document","addEventListener","game","run","Constants","require","mapGrid","socket","io","Game","players","weapons","playersInfo","board","selfId","ball","translateX","translateY","pageURL","decodeURIComponent","window","location","search","substring","param","split","roomId","setUpJoinRoom","undefined","emit","on","$","append","data","msg","loadNewRoomButton","isNewRoom","history","replaceState","remove","start","makeNewRoomButton","e","preventDefault","Crafty","background","iso","diamondIso","init","TILE","WIDTH","SURFACE_HEIGHT","NUM_MAZE_ROWS","NUM_MAZE_COLS","scene","setUpLoadingScene","bind","startGame","keyCode","keys","S","unbind","setUpNewGame","setUpPlayersMove","setUpPlacingWeapons","setUpCreateDamage","setUpHPChange","setUpTimer","setUpGameOver","setUpAddBall","setUpShowBall","setUpShowBallRecord","setUpHaveWeapon","attr","x","y","w","text","textColor","winnerText","winnerId","winnerScore","loadingScene","sprite","tileSprite","ORIG_WIDTH","ORIG_HEIGHT","wallSprite","PLAYER","greenSprite","playerTextY","playerText","playerColor","NUM_COLS","NUM_ROWS","seedRandomStr","playerId","destroy","timer","forEach","playerInfo","playerPx","playerX","playerY","playerPos","playerRow","playerCol","parseInt","player","setUp","setUpSocket","setUpSetBallTime","bindingKeyEvents","h","HEIGHT","reel","place","Z","HP","longestBallHoldingTime","otherPlayer","createMapEntities","i","j","maze","isWall","wallEntity","console","log","tileEntity","viewport","GAME_WIDTH","weapon","at","row","col","type","addComponent","BFS_WIDTH","BFS_HEIGHT","DFS_WIDTH","DFS_HEIGHT","getCol","getRow","damageCell","setUpCreator","creatorId","disappearAfter","disappearTime","color","playerHP","pickUpBall","html","currentBallHoldingTime","score","weaponType","loseWeapon","empty","createComponents","createPlayerComponent","createWeaponComponent","createBallComponent","module","exports","model","GAME_HEIGHT","wallDirection","epsilon","c","getRowsCols","xOverW","yOverH","fixRoundingErrors","rows","Math","floor","spaceOccupyingX","push","ceil","cols","spaceOccupyingY","n","abs","round","requires","RATIO","actor","y0","y1","BALL_WIDTH","BALL_HEIGHT","CHAR_STEP","weaponTypes","BFS","DFS","gameSettings","WEAPON_RANGE","BUFFER_DAMAGE_TIME","BUFFER_SHOOTING_TIME","WEAPON_SPAWN_TIME","DAMAGE_ANIMATION_TIME","DAMAGE_DISAPPEAR_TIME","HP_DAMAGE","GAME_DURATION","COLORS","charStep","hasTakenDamage","weaponCoolingdown","z","charMove","left","right","up","down","originalEvent","RIGHT_ARROW","animate","flip","LEFT_ARROW","unflip","UP_ARROW","DOWN_ARROW","pickUpWeapon","X","shootWeapon","isPlaying","pauseAnimation","moveDir","dirX","dirY","longestSecsHoldingBall","weaponDisplayId","setTimeout","ClientModel","receiver","wallInit","playerMoveInDirections","speed","Cell","Board","m","print","numGridRows","numGridCols","numMazeCols","numMazeRows","seedrandom","createStartingMaze","frontier","generateMaze","Array","length","maz","map","tile","table","dirs","neighborTiles","dir","dRow","dCol","filter","tileRow","tileCol","isInGrid","neighbors","newRow","newCol","getNeighborSpace","cell","isInMaze","hasBeenFrontier","addFrontiers","randomRow","random","randomCol","gridToMazePos","otherRow","otherCol","getRandomCell","expandMaze","randomIndex","splice","randomPos","inMazeNeighbors","neighRow","neighCol","breakWall"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2ac692453ad331003652\n **/","import Game from './game.js';\n/* globals io */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const game = new Game();\n  game.run();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/index.js\n **/","import initGame from './components/init.js';\nimport ClientModel from './model/client_model.js';\nimport Board from './board.js';\nconst Constants = require('./constants.js');\nconst mapGrid = Constants.mapGrid;\n\nconst socket = io();\n/* globals Crafty */\n/* globals io */\n\nclass Game {\n  constructor() {\n    this.players = {};\n    this.weapons = {};\n    this.playersInfo = {};\n    this.board = null;\n    this.selfId = null;\n    this.ball = null;\n    this.translateX = 0;\n    this.translateY = 0;\n  }\n\n  run() {\n    // getting the room id from the url params, if any\n    let pageURL = decodeURIComponent(window.location.search.substring(1));\n    let param = pageURL.split('=');\n    let roomId;\n    if (param[0] === 'room_id') {\n      roomId = param[1];\n    }\n\n    this.setUpJoinRoom();\n\n    if (roomId !== undefined) {\n      socket.emit('joinRoom', { roomId: roomId });\n      socket.on('failedToJoin', data => {\n        $('#game').append(`<span class='error-msg'>${ data.msg }</span>`);\n      });\n    } else {\n      this.loadNewRoomButton();\n    }\n  }\n\n  setUpJoinRoom() {\n    socket.on('joinRoom', data => {\n      let param = `?room_id=${ data.roomId }`;\n      $('#game').append(`<span>\n                           Link: amazeball.lilykwan.me/${ param }\n                         </span>`);\n\n      if (data.isNewRoom) {\n        // replace the url with room id query\n        window.history.replaceState({}, '', param);\n        $('#game .new-room').remove();\n      }\n\n      this.start();\n    });\n  }\n\n  loadNewRoomButton() {\n    const makeNewRoomButton = \"<button class='new-room'>Create Room</button>\";\n    $('#game').append(makeNewRoomButton);\n\n    $('#game .new-room').on('click', e => {\n      e.preventDefault();\n      socket.emit('makeNewRoom');\n    });\n  }\n\n  start() {\n    initGame(Crafty, ClientModel);\n    //TODO: DELETE MODEL\n    Crafty.background('url(../assets/free-space-background-7.png) repeat');\n\n    this.iso = Crafty.diamondIso.init(mapGrid.TILE.WIDTH,\n                                       mapGrid.TILE.SURFACE_HEIGHT,\n                                       mapGrid.NUM_MAZE_ROWS,\n                                       mapGrid.NUM_MAZE_COLS);\n\n    socket.emit('setUpLoadingScene');\n\n    let game = this;\n    Crafty.scene('Loading', function() {\n      game.setUpLoadingScene.bind(game)();\n      this.startGame = this.bind('KeyDown', function(e) {\n        if (e.keyCode === Crafty.keys.S) {\n          socket.emit('startNewGame');\n        }\n      });\n    }, function() {\n      this.unbind('KeyDown', this.startGame);\n    });\n\n    Crafty.scene('Game', (data) => {\n      this.setUpNewGame(data);\n      this.setUpPlayersMove();\n      this.setUpPlacingWeapons();\n      this.setUpCreateDamage();\n      this.setUpHPChange();\n      this.setUpTimer();\n      this.setUpGameOver();\n      this.setUpAddBall();\n      this.setUpShowBall();\n      this.setUpShowBallRecord();\n      this.setUpHaveWeapon();\n    });\n\n    Crafty.scene('GameOver', (data) => {\n      Crafty.e('2D, DOM, Text')\n            .attr({ x: 0, y: 0, w: 300 })\n            .text('Game Over')\n            .textColor('white');\n\n      let winnerText;\n      if (data.winnerId !== undefined) {\n        winnerText = `player ${ data.winnerId } has\n                won with ${ data.winnerScore } secs`;\n      } else {\n        winnerText = 'No one won!';\n      }\n\n      Crafty.e('2D, DOM, Text')\n        .attr({ x: 50, y: 50, w: 400})\n        .text(winnerText)\n        .textColor('white');\n    });\n\n    Crafty.scene('Loading');\n  }\n\n  setUpLoadingScene() {\n    let loadingScene =\n      Crafty.e('2D, DOM, Text')\n            .attr({ x: 0, y: 0, w: 300 })\n            .text('A-maze Ball - Press s to start')\n            .textColor('white');\n      Crafty.e('2D, DOM, Text')\n            .attr({ x: 0, y: 30, w: 300 })\n            .text(`Game can only be started when\n                   there are more than 2 people in the room`)\n            .textColor('white');\n\n    // Crafty.sprite(\"../assets/red.png\", {spr_red:[0,0,174,116]});\n    // Crafty.sprite(\"../assets/green.png\", {spr_green:[0,0,166,108]});\n    // Crafty.sprite(\"../assets/blue.png\", {spr_blue:[0,0,154,100]});\n    // Crafty.sprite(\"../assets/yellow.png\", {spr_yellow:[0,0,167,128]});\n    // Crafty.sprite(\"../assets/ball.png\", {spr_ball:[0,0,144,144]});\n    // Crafty.sprite(\"../assets/bfs_weapon.png\", {spr_bfs:[0,0,144,102]});\n    // Crafty.sprite(\"../assets/dfs_weapon.png\", {spr_dfs:[0,0,288,88]});\n    //\n    Crafty.sprite(\"../assets/tile.png\", {\n      tileSprite:[0, 0, mapGrid.TILE.ORIG_WIDTH, mapGrid.TILE.ORIG_HEIGHT]\n    });\n    Crafty.sprite(\"../assets/lava_tile.png\", {\n      wallSprite:[0, 0, mapGrid.TILE.ORIG_WIDTH, mapGrid.TILE.ORIG_HEIGHT]\n    });\n    Crafty.sprite(mapGrid.PLAYER.ORIG_WIDTH, mapGrid.PLAYER.ORIG_HEIGHT,\n                  \"../assets/green_char.png\", {\n      greenSprite: [0, 0]\n    });\n\n    let playerTextY = 50;\n    socket.on('joinGame', data => {\n      let playerText = Crafty.e('2D, DOM, Text')\n            .attr({ x: 50, y: playerTextY, w: 200 })\n            .text(`You are player ${data.selfId}`)\n            .textColor(data.playerColor);\n      playerTextY += 30;\n        this.board =\n        new Board(mapGrid.NUM_COLS, mapGrid.NUM_ROWS,\n                  data.seedRandomStr, Crafty, true);\n      this.playersInfo[data.selfId] = playerText;\n      this.selfId = data.selfId;\n\n    });\n\n    socket.on('addNewPlayer', data => {\n      let playerText = Crafty.e('2D, DOM, Text')\n            .attr({ x: 50, y: playerTextY, w: 200 })\n            .text(`connected with player ${ data.playerId }`)\n            .textColor(data.playerColor);\n      playerTextY += 30;\n      this.playersInfo[data.playerId] = playerText;\n    });\n\n    socket.on('othersDisconnected', data => {\n      if (this.players[data.playerId]) {\n        this.players[data.playerId].destroy();\n        delete this.players[data.playerId];\n      }\n\n      if (this.playersInfo[data.playerId]) {\n        this.playersInfo[data.playerId].destroy();\n        delete this.playersInfo[data.playerId];\n      }\n    });\n\n    socket.on('startNewGame', (data) => {\n      Crafty.scene('Game', data);\n    });\n  }\n\n  setUpNewGame(data) {\n    $('#game-status').append(`<div id='hp'>\n                              <h2>HP</h2>\n                             </div>`);\n    $('#game-status').append(`<div id='timer'>\n                              <h2>Timer</h2>\n                              <span id='timer-countdown'>\n                                ${ data.timer }\n                              </span>\n                             </div>`);\n    $('#game-status').append(`<div id='self-record'>\n                                <h2>Ball Duration</h2>\n                                Longest Duration Time: 0\n                                Current Duration Time: 0\n                             </div>`);\n    $('#game-status').append(`<div id='scoreboard'>\n                              <h2>Scoreboard</h2>\n                             </div>`);\n    $('#game-status').append(`<div id=\"weapon\">\n                                <h2>Weapon</h2>\n                                <div id='weapon-img'></div>\n                                <div id='weapon-type'></div>\n                             </div>`);\n    data.players.forEach(playerInfo => {\n      let [playerX, playerY] = playerInfo.playerPx;\n      let [playerRow, playerCol] = playerInfo.playerPos;\n      if (parseInt(playerInfo.playerId) === this.selfId) {\n        let player =\n             Crafty.e('Player, SpriteAnimation, greenSprite')\n                   .setUp(playerInfo.playerId, playerInfo.playerColor)\n                   .setUpSocket(socket)\n                   .setUpSetBallTime()\n                   .bindingKeyEvents()\n                   .attr({ w: mapGrid.PLAYER.WIDTH, h: mapGrid.PLAYER.HEIGHT })\n                   .reel('PlayerMovingRight', 600, 0, 1, 5)\n                   .reel('PlayerMovingDown', 600, 0, 1, 5)\n                   .reel('PlayerMovingUp', 600, 0, 2, 5)\n                   .reel('PlayerMovingLeft', 600, 0, 2, 5);\n                  //  .animate('PlayerMovingDown', -1);\n\n\n        // place it on isometric map\n        // this.iso.place(player, playerRow, playerCol, mapGrid.ACTOR_Z);\n        this.iso.place(player, playerRow, playerCol, mapGrid.PLAYER.Z);\n\n        // after placing it on isometric map, figure out the translation of px\n        // from the server side to client side rendering\n        this.translateX = player.x - playerX;\n        this.translateY = player.y - playerY;\n\n        // since the player block always starts at bottom left corner\n        // when rendering, we need to account for the translation so we can\n        // render the player block in the top left corner instead\n        this.translateX += ((mapGrid.TILE.WIDTH - mapGrid.PLAYER.WIDTH) / 2);\n        this.translateY -=\n          ((mapGrid.TILE.SURFACE_HEIGHT - mapGrid.PLAYER.SURFACE_HEIGHT) / 2);\n\n        // translate the player px in the initial rendering as well\n        player.x += ((mapGrid.TILE.WIDTH - mapGrid.PLAYER.WIDTH) / 2);\n        player.y -=\n          ((mapGrid.TILE.SURFACE_HEIGHT - mapGrid.PLAYER.SURFACE_HEIGHT) / 2);\n\n        // if (player.playerColor === 'red') {\n        //   player.addComponent('spr_red')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (player.playerColor === 'green') {\n        //   player.addComponent('spr_green')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (player.playerColor === 'blue') {\n        //   player.addComponent('spr_blue')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (player.playerColor === 'yellow') {\n        //   player.addComponent('spr_yellow')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // }\n\n        $('#hp').append(`<span class='player-${ playerInfo.playerId }'>\n                                  Player ${playerInfo.playerId}: ${ player.HP }\n                                 </span>`);\n        $('#scoreboard').append(`<span class='player-${ playerInfo.playerId }'>\n              Player ${playerInfo.playerId}: ${ player.longestBallHoldingTime }\n                                 </span>`);\n\n        this.players[playerInfo.playerId] = player;\n      } else {\n        let otherPlayer =\n          Crafty.e('OtherPlayer, tileSprite')\n                .setUp(data.players.playerId, playerInfo.playerColor)\n                .attr({ w: mapGrid.PLAYER.WIDTH, h: mapGrid.PLAYER.HEIGHT });\n\n\n          // place it on isometric map\n          this.iso.place(otherPlayer, playerRow, playerCol, mapGrid.PLAYER.Z);\n\n\n        // if (otherPlayer.playerColor === 'red') {\n        //   otherPlayer.addComponent('spr_red')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (otherPlayer.playerColor === 'green') {\n        //   otherPlayer.addComponent('spr_green')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (otherPlayer.playerColor === 'blue') {\n        //   otherPlayer.addComponent('spr_blue')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // } else if (otherPlayer.playerColor === 'yellow') {\n        //   otherPlayer.addComponent('spr_yellow')\n        //         .attr({ w: mapGrid.PLAYER_WIDTH, h: mapGrid.PLAYER_HEIGHT });\n        // }\n\n        $('#hp').append(`<span class='player-${ playerInfo.playerId }'>\n                            Player ${playerInfo.playerId}: ${ otherPlayer.HP }\n                           </span>`);\n        $('#scoreboard').append(`<span class='player-${ playerInfo.playerId }'>\n          Player ${playerInfo.playerId}: 0\n                                 </span>`);\n\n        this.players[playerInfo.playerId] = otherPlayer;\n      }\n    });\n\n    this.createMapEntities();\n  }\n\n  createMapEntities() {\n    for (let i = 0; i < mapGrid.NUM_MAZE_ROWS; i++) {\n      for (let j = 0; j < mapGrid.NUM_MAZE_COLS; j++) {\n        if (this.board.maze[i][j].isWall) {\n          const wallEntity =\n            Crafty.e('2D, DOM, wallSprite')\n                  .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n          this.iso.place(wallEntity, i, j, mapGrid.TILE.Z);\n        } else {\n          console.log(mapGrid.TILE.WIDTH);\n          const tileEntity =\n            Crafty.e('2D, DOM, tileSprite')\n                  .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT });\n          this.iso.place(tileEntity, i, j, mapGrid.TILE.Z);\n        }\n      }\n    }\n\n    Crafty.viewport.x = mapGrid.GAME_WIDTH / 2;\n    Crafty.viewport.y = 0 + mapGrid.PLAYER.HEIGHT;\n  }\n\n  setUpPlayersMove() {\n    socket.on('updatePos', data => {\n      const player = this.players[data.playerId];\n      if (player) {\n        player.x = data.x + this.translateX;\n        player.y = data.y + this.translateY;\n      }\n    });\n  }\n\n  setUpPlacingWeapons() {\n    socket.on('addWeapon', data => {\n      const weapon = Crafty.e('Weapon')\n                           .at(data.row, data.col)\n                           .setUp(data.type);\n\n      if (data.type === 'BFS') {\n        weapon.addComponent('spr_bfs')\n              .attr({ w: mapGrid.BFS_WIDTH, h: mapGrid.BFS_HEIGHT });\n      } else if (data.type === 'DFS') {\n        weapon.addComponent('spr_dfs')\n              .attr({ w: mapGrid.DFS_WIDTH, h: mapGrid.DFS_HEIGHT });\n      }\n      const col = weapon.getCol();\n      const row = weapon.getRow();\n      this.weapons[[col, row]] = weapon;\n    });\n\n    socket.on('destroyWeapon', data => {\n      const weapon = this.weapons[[data.col, data.row]];\n      weapon.destroy();\n    });\n  }\n\n  setUpCreateDamage() {\n    socket.on('createDamage', data => {\n      Crafty.e('Damage')\n            .at(data.damageCell[0], data.damageCell[1])\n            .attr({ w: mapGrid.TILE.WIDTH, h: mapGrid.TILE.HEIGHT })\n            .setUpCreator(data.creatorId)\n            .disappearAfter(data.disappearTime)\n            .color(this.players[data.creatorId].playerColor, 0.5);\n    });\n  }\n\n  setUpHPChange() {\n    socket.on('HPChange', data => {\n      const player = this.players[data.playerId];\n      if (player) {\n        player.HP = data.playerHP;\n        $(`#hp .player-${ data.playerId }`)\n          .text(`Player ${data.playerId}: ${ data.playerHP }`);\n      }\n    });\n  }\n\n  setUpTimer() {\n    socket.on('countDown', data => {\n      $('#timer-countdown').text(data.timer);\n    });\n  }\n\n  setUpGameOver() {\n    socket.on('gameOver', data => {\n      Crafty.scene('GameOver', data);\n    });\n  }\n\n  setUpAddBall() {\n    socket.on('addBall', data => {\n      // this.ball = Crafty.e('Ball, tileSprite')\n      //     .attr({ w: mapGrid.BALL_WIDTH, h: mapGrid.BALL_HEIGHT });\n      //\n      // this.iso.place(this.ball, data.row, data.col, mapGrid.ACTOR_Z);\n    });\n  }\n\n  setUpShowBall() {\n    socket.on('showBall', data => {\n      this.ball.destroy();\n      this.players[data.playerId].pickUpBall();\n    });\n\n    socket.on('loseBall', data => {\n      this.players[data.playerId]\n                  .color('black');\n    });\n  }\n\n  setUpShowBallRecord() {\n    socket.on('showSelfScore', data => {\n      $('#self-record')\n        .html(`\n          <h2>Ball Duration</h2>\n          <span>\n            Longest Duration Time: ${ data.longestBallHoldingTime }\n          </span>\n          <span>\n            Current Duration Time: ${ data.currentBallHoldingTime }\n          </span>`);\n    });\n\n    socket.on('showScoreboard', data => {\n      $(`#scoreboard .player-${ data.playerId }`).text(\n        `Player ${data.playerId}: ${ data.score }`);\n    });\n  }\n\n  setUpHaveWeapon() {\n    socket.on('pickUpWeapon', data => {\n      this.players[this.selfId].weaponType = data.type;\n      $('#weapon-type').text(data.type);\n      if (data.type === 'BFS') {\n        $('#weapon-img').html(`<img src='../assets/bfs_weapon.png'\n                                      height='50'></img>`);\n      } else if (data.type === 'DFS') {\n        $('#weapon-img').html(`<img src='../assets/dfs_weapon.png'\n                                      height='50'></img>`);\n      }\n    });\n\n    socket.on('loseWeapon', data => {\n      this.players[data.playerId].loseWeapon();\n      $('#weapon-type').empty();\n      $('#weapon-img').empty();\n    });\n  }\n}\n\nexport default Game;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/game.js\n **/","var createComponents = require('./components.js');\nvar createPlayerComponent = require('./player.js');\nvar createWeaponComponent = require('./weapon.js');\nvar createBallComponent = require('./ball.js');\nconst Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\n\nmodule.exports = function(Crafty, model) {\n  // change name of the html element to stage\n  Crafty.init(mapGrid.GAME_WIDTH, mapGrid.GAME_HEIGHT, 'stage');\n\n  createComponents(Crafty, model);\n  createPlayerComponent(Crafty, model);\n  createWeaponComponent(Crafty);\n  createBallComponent(Crafty);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/init.js\n **/","const Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\nconst wallDirection = Constants.wallDirection;\n/* globals Crafty */\n\nlet epsilon = 0.000000001;\n\nmodule.exports = function(Crafty, model) {\n  Crafty.c('Tile', {\n    init: function() {\n      this.attr({\n        w: mapGrid.TILE.WIDTH,\n        h: mapGrid.TILE.HEIGHT\n      });\n    },\n\n    at: function(row, col) {\n      // the amount to move from one neighbor to the other\n      const w = (mapGrid.TILE.WIDTH / 2);\n      const h = (mapGrid.TILE.WIDTH / 4);\n\n      const x = (row - col) * w;\n      const y = (row + col) * h;\n      this.attr({ x: x, y: y });\n      return this;\n    },\n\n    getRowsCols: function() {\n      const w = (mapGrid.TILE.WIDTH / 2);\n      const h = (mapGrid.TILE.SURFACE_HEIGHT / 2);\n\n      const xOverW = this.x / w;\n      const yOverH = this.y / h;\n\n      // (x/w) + (y/h) = 2*r\n      const row = this.fixRoundingErrors((xOverW + yOverH) / 2);\n      const col = this.fixRoundingErrors(row - xOverW);\n\n      // const bottomRightX = this.x + mapGrid.PLAYER_WIDTH;\n      // const bottomRightY = this.y + mapGrid.SURFACE_HEIGHT;\n      // const xOverWBR = bottomRightX / w;\n      // const yOverHBR = bottomRightY / h;\n      // const rowBR = this.fixRoundingErrors((xOverWBR + yOverHBR) / 2);\n      // const colBR = this.fixRoundingErrors(rowBR - xOverWBR);\n\n      // finding all the rows it is at\n      let rows = [Math.floor(row)];\n      // if (((row - Math.floor(row)) * w - (mapGrid.PLAYER_WIDTH / 2)) > epsilon) {\n\n      // if the offset of the block + half the width of the block is more than\n      // the width of half a tile, then it is overlapping two rows\n      let spaceOccupyingX = (row - Math.floor(row)) * w\n                              + (mapGrid.PLAYER.WIDTH / 2);\n      if ((spaceOccupyingX - w) > epsilon) {\n        // console.log('really?');\n        // console.log((row - Math.floor(row)) * w);\n        // console.log(mapGrid.PLAYER_WIDTH / 2);\n        // console.log(w);\n        rows.push(Math.ceil(row));\n      }\n\n      // finding all the cols it is at\n      let cols = [Math.floor(col)];\n      // if (Math.floor(col) !== Math.floor(colBR)) {\n      let spaceOccupyingY = (col - Math.floor(col)) * h\n                            + (mapGrid.PLAYER.SURFACE_HEIGHT / 2);\n      if ((spaceOccupyingY - h) > epsilon) {\n        // rows.push(Math.floor(colBR));\n        cols.push(Math.ceil(col));\n      }\n      // if (Math.floor(col) !== Math.ceil(col)) {\n      // if ((col - Math.floor(col)) * h - (mapGrid.PLAYER_WIDTH / 4) > epsilon) {\n      //   cols.push(Math.ceil(col));\n      // }\n\n      return [rows, cols];\n    },\n\n    // account for the floating point epsilon\n    fixRoundingErrors: function(n) {\n      return (Math.abs(n - Math.round(n)) <= epsilon) ? Math.round(n) : n;\n    }\n  });\n\n  Crafty.c('Actor', {\n    init: function() {\n      this.requires('2D, Canvas, Tile');\n    },\n  });\n\n  Crafty.c('Wall', {\n    init: function() {\n      this.requires('2D, Canvas, Tile, Solid, Collision');\n    }\n  });\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/components.js\n **/","const NUM_ROWS = 8;\nconst NUM_COLS = 8;\nconst NUM_MAZE_ROWS =  NUM_ROWS * 2 - 1;\nconst NUM_MAZE_COLS = NUM_COLS * 2 - 1;\n\nconst TILE = {\n  ORIG_WIDTH: 101,\n  ORIG_HEIGHT: 122,\n  RATIO: 3 / 4,\n  Z: 0\n};\n\nconst PLAYER = {\n  ORIG_WIDTH: 40,\n  ORIG_HEIGHT: 54,\n  RATIO: 1\n};\n\n[TILE, PLAYER].forEach(actor => {\n  actor.WIDTH = actor.ORIG_WIDTH * actor.RATIO;\n  actor.HEIGHT = actor.ORIG_HEIGHT * actor.RATIO;\n  actor.SURFACE_HEIGHT = actor.WIDTH / 2;\n});\n\n[PLAYER].forEach(actor => {\n  const y0 = (TILE.HEIGHT / TILE.SURFACE_HEIGHT - 2) * TILE.SURFACE_HEIGHT;\n  // need to increase it by player depth\n  const y1 = y0 + (PLAYER.HEIGHT - PLAYER.SURFACE_HEIGHT);\n  // finding the z layer based on the craftyjs code\n  actor.Z = (y1 - ((PLAYER.HEIGHT / TILE.SURFACE_HEIGHT - 2) * PLAYER.SURFACE_HEIGHT)) / TILE.SURFACE_HEIGHT;\n  // actor.Z = ((PLAYER.HEIGHT - PLAYER.SURFACE_HEIGHT) /\n  //           ((TILE.HEIGHT - TILE.SURFACE_HEIGHT) / ACTOR_Z)) + 1;\n  // actor.Z = (((PLAYER_HEIGHT / TILE.SURFACE_HEIGHT) - 2) * TILE.SURFACE_HEIGHT\n});\n  console.log(PLAYER.Z);\n\n// const TILE_ORIG_WIDTH = 101;\n// const TILE_ORIG_HEIGHT = 122;\n// const TILE_RATIO = (1 / 2);\n// const TILE_WIDTH = TILE_ORIG_WIDTH * TILE_RATIO;\n// const TILE_HEIGHT = TILE_ORIG_HEIGHT * TILE_RATIO;\n// const TILE_SURFACE_HEIGHT = TILE_WIDTH / 2;\n\n// const [PLAYER_ORIG_WIDTH, PLAYER_ORIG_HEIGHT] = [40, 54];\n// const [PLAYER_ORIG_WIDTH, PLAYER_ORIG_HEIGHT] = [101, 122];\n// const PLAYER_RATIO = (1 / 2);\n// const PLAYER_WIDTH = PLAYER_ORIG_WIDTH * PLAYER_RATIO;\n// const PLAYER_HEIGHT = PLAYER_ORIG_HEIGHT * PLAYER_RATIO;\n// const PLAYER_SURFACE_HEIGHT = PLAYER_WIDTH / 2;\n// the z layer if it was the same height as the tile\n\nconst mapGrid = {\n  GAME_WIDTH: NUM_MAZE_ROWS * TILE.WIDTH,\n  // CHANGE TILE HEIGHT TO CHAR HEIGHT\n  GAME_HEIGHT: NUM_MAZE_COLS * TILE.SURFACE_HEIGHT + PLAYER.HEIGHT,\n  NUM_ROWS: NUM_ROWS,\n  NUM_COLS: NUM_COLS,\n  NUM_MAZE_ROWS: NUM_MAZE_ROWS,\n  NUM_MAZE_COLS: NUM_MAZE_COLS,\n  TILE: TILE,\n  PLAYER: PLAYER,\n  BALL_WIDTH: 101 / 2,\n  BALL_HEIGHT: 122 / 2,\n  DFS_WIDTH: 25,\n  DFS_HEIGHT: 0.30 * 25,\n  BFS_WIDTH: 20,\n  BFS_HEIGHT: 0.70 * 20,\n  CHAR_STEP: 20 // how many steps it needs from one tile to another\n};\n\nconst weaponTypes = {\n  BFS: 'BFS',\n  DFS: 'DFS'\n};\n\nconst gameSettings = {\n  WEAPON_RANGE: 10,\n  BUFFER_DAMAGE_TIME: 1000,\n  BUFFER_SHOOTING_TIME: 1500,\n  WEAPON_SPAWN_TIME: 10000,\n  DAMAGE_ANIMATION_TIME: 100,\n  DAMAGE_DISAPPEAR_TIME: 1000,\n  HP_DAMAGE: 10,\n  GAME_DURATION: 2000, // 200\n  COLORS: ['blue', 'red', 'yellow', 'green']\n};\n\nmodule.exports = {\n  mapGrid: mapGrid,\n  weaponTypes: weaponTypes,\n  gameSettings: gameSettings\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/constants.js\n **/","/* globals Crafty */\nconst Constants = require('../constants.js');\nconst mapGrid = Constants.mapGrid;\nconst wallDirection = Constants.wallDirection;\n\nmodule.exports = function(Crafty, model) {\n  Crafty.c('Player', {\n    init: function() {\n      this.requires('2D, DOM, Tile, Collision, Color');\n      this.HP = 100;\n      this.charStep = mapGrid.CHAR_STEP;\n      this.hasTakenDamage = false;\n      this.longestBallHoldingTime = 0;\n      this.currentBallHoldingTime = 0;\n      this.weaponType = null;\n      this.weaponCoolingdown = false;\n      this.z = 9;\n    },\n\n    bindingKeyEvents() {\n      this.charMove = { left: false, right: false, up: false, down: false };\n\n      this.bind('EnterFrame', function() {\n        if (this.charMove.right || this.charMove.left ||\n            this.charMove.up || this.charMove.down) {\n          this.socket.emit('updatePos', {\n            playerId: this.playerId,\n            charMove: this.charMove\n          });\n        }\n      });\n\n      this.bind('KeyDown', function(e) {\n        e.originalEvent.preventDefault();\n        this.charMove.left = false;\n        this.charMove.right = false;\n        this.charMove.down = false;\n        this.charMove.up = false;\n\n        if (e.keyCode === Crafty.keys.RIGHT_ARROW) {\n          this.charMove.right = true;\n          console.log(\"animating!\");\n          this.animate('PlayerMovingRight', -1);\n          console.log(this.flip(\"X\"));\n        }\n        if (e.keyCode === Crafty.keys.LEFT_ARROW) {\n          console.log(\"animating!\");\n          this.animate('PlayerMovingLeft', -1);\n          this.charMove.left = true;\n          this.unflip(\"X\");\n        }\n        if (e.keyCode === Crafty.keys.UP_ARROW) {\n          console.log(\"animating!\");\n          this.animate('PlayerMovingUp', -1);\n          this.charMove.up = true;\n          this.flip(\"X\");\n        }\n        if (e.keyCode === Crafty.keys.DOWN_ARROW) {\n          console.log(\"animating!\");\n          this.animate('PlayerMovingDown', -1);\n          this.charMove.down = true;\n          this.unflip(\"X\");\n        }\n\n        if (e.keyCode === Crafty.keys.Z) {\n          this.pickUpWeapon();\n        }\n\n        if (e.keyCode === Crafty.keys.X && this.weaponType !== null) {\n          this.shootWeapon();\n        }\n      });\n\n      this.bind('KeyUp', function(e) {\n        if (e.keyCode === Crafty.keys.RIGHT_ARROW) {\n          if (this.isPlaying('PlayerMovingRight')) this.pauseAnimation();\n          this.charMove.right = false;\n        }\n        if (e.keyCode === Crafty.keys.LEFT_ARROW) {\n          if (this.isPlaying('PlayerMovingLeft')) this.pauseAnimation();\n          this.charMove.left = false;\n        }\n        if (e.keyCode === Crafty.keys.UP_ARROW) {\n          if (this.isPlaying('PlayerMovingUp')) this.pauseAnimation();\n          this.charMove.up = false;\n        }\n        if (e.keyCode === Crafty.keys.DOWN_ARROW) {\n          if (this.isPlaying('PlayerMovingDown')) this.pauseAnimation();\n          this.charMove.down = false;\n        }\n        // this.pauseAnimation();\n      });\n\n      return this;\n    },\n\n    moveDir(dirX, dirY) {\n      // the offset it needs to move to the neighbor blocks\n      const w = mapGrid.TILE.WIDTH / 2;\n      const h = mapGrid.TILE.SURFACE_HEIGHT / 2;\n\n      this.x += (w / this.charStep) * dirX;\n      this.y += (h / this.charStep) * dirY;\n    },\n\n    setUp: function(playerId, playerColor) {\n      this.playerId = playerId;\n      if (playerColor) {\n        this.playerColor = playerColor;\n      }\n      return this;\n    },\n\n    setUpSocket: function(socket) {\n      this.socket = socket;\n      return this;\n    },\n\n    setUpSetBallTime: function() {\n      this.socket.on('setBallTime', data => {\n        this.currentBallHoldingTime = data.currentBallHoldingTime;\n        this.longestSecsHoldingBall = data.longestSecsHoldingBall;\n      });\n\n      return this;\n    },\n\n    pickUpWeapon: function() {\n      this.socket.emit('pickUpWeapon', {\n        playerId: this.playerId\n      });\n    },\n\n    pickUpBall: function() {\n      this.color('white');\n      return this;\n    },\n\n    shootWeapon: function() {\n      this.socket.emit('shootWeapon', {\n        playerId: this.playerId\n      });\n    },\n\n    loseWeapon: function() {\n      this.weaponType = null;\n    }\n  });\n\n  Crafty.c('OtherPlayer', {\n    init: function() {\n      this.requires('2D, DOM, Tile, Color');\n      this.HP = 100;\n    },\n\n    setUp: function(playerId, playerColor, weaponDisplayId) {\n      this.playerId = playerId;\n\n      if (playerColor) {\n        this.playerColor = playerColor;\n      }\n\n      if (weaponDisplayId) {\n        this.weaponDisplayId = weaponDisplayId;\n      }\n\n      return this;\n    },\n\n    pickUpBall: function() {\n      this.color('white');\n      return this;\n    },\n\n    loseWeapon: function() {\n\n    }\n\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/player.js\n **/","/* globals Crafty */\n\nmodule.exports = function(Crafty) {\n  Crafty.c('Weapon', {\n    init: function() {\n      this.requires('Actor, Color, Collision');\n    },\n\n    setUp: function(type) {\n      this.type = type;\n      return this;\n    }\n  });\n\n  Crafty.c('Damage', {\n    init: function() {\n      this.requires('Actor, Color, Collision');\n    },\n\n    setUpCreator(playerId) {\n      this.creatorId = playerId;\n      return this;\n    },\n\n    disappearAfter(disappearTime) {\n      setTimeout(() => this.destroy(), disappearTime);\n      return this;\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/weapon.js\n **/","/* globals Crafty */\n\nmodule.exports = function(Crafty) {\n  Crafty.c('Ball', {\n    init: function() {\n      this.requires('2D, DOM, Tile, Solid, Collision');\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/components/ball.js\n **/","let ClientModel = {\n  receiver: 'CLIENT',\n  wallInit: function() {\n    this.requires('2D, Canvas, Solid, Color, Collision');\n  },\n  playerMoveInDirections: function(speed) {\n\n  }\n };\n\nmodule.exports = ClientModel;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/model/client_model.js\n **/","const Constants = require('./constants.js');\nconst mapGrid = Constants.mapGrid;\nconst Cell = require('./cell.js');\n\nclass Board {\n  constructor(m, n, seedRandomStr, print) {\n    // how many cells rows and cols are there if walls were just borders\n    this.numGridRows = m;\n    this.numGridCols = n;\n    // for the 2d array with the walls as part of the cells\n    this.numMazeCols = (2 * n) - 1;\n    this.numMazeRows = (2 * m) - 1;\n\n    Math.seedrandom(seedRandomStr);\n    this.maze = this.createStartingMaze();\n    this.frontier = [];\n    this.generateMaze();\n    if (print) this.log(this.maze);\n  }\n\n  // create a starting maze map with all the walls\n  createStartingMaze() {\n    let maze = new Array(this.numMazeRows);\n    for (let i = 0; i < maze.length; i++) {\n      maze[i] = new Array(this.numMazeCols);\n      for (let j = 0; j < this.numMazeCols; j++) {\n        if (i % 2 === 1) {\n          // the odd number rows are all filled with wall\n          maze[i][j] = new Cell(true);\n        } else {\n          // the odd number cols are walls and the even number cols are spaces\n          maze[i][j] = (j % 2 === 1) ? new Cell(true) : new Cell(false);\n        }\n      }\n    }\n    return maze;\n  }\n\n  gridToMazePos(row, col) {\n    return [row * 2, col * 2];\n  }\n\n  log(maze) {\n    let maz = maze.map(row => {\n      return row.map(tile => {\n        if (tile.isWall) return 1;\n        if (!tile.isWall) return 0;\n      });\n    });\n    console.table(maz);\n  }\n\n  // getting direct neighbor tiles that are not walls\n  getNeighborTiles(row, col) {\n    let dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    let neighborTiles = dirs.map(dir => {\n      let [dRow, dCol] = dir;\n      return [row + dRow, col + dCol];\n    });\n\n    // return the tiles that are in the grid and\n    // tiles that are not walls\n    return neighborTiles.filter(([tileRow, tileCol]) => {\n      return this.isInGrid(tileRow, tileCol) &&\n        !this.maze[tileRow][tileCol].isWall;\n    });\n  }\n\n  // getting the neighbor cells separated by a wall\n  getNeighborSpace(row, col) {\n    let dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    let neighbors = [];\n    dirs.forEach(dir => {\n      // multiplying by 2 to account for the wall in between\n      let [newRow, newCol] = [row + dir[0] * 2, col + dir[1] * 2];\n      if (this.isInGrid(newRow, newCol)) {\n        // ensure that we are not adding walls\n        if (this.maze[newRow][newCol].isWall === true) {\n          throw \"Error: adding walls to the neighbor space array\";\n        }\n\n        neighbors.push([newRow, newCol]);\n      }\n    });\n\n    return neighbors;\n  }\n\n  // the forefront surrounding the cells that are in the maze\n  addFrontiers(row, col) {\n    this.getNeighborSpace(row, col).forEach(cell => {\n      let [newRow, newCol] = cell;\n      if (!this.maze[newRow][newCol].isInMaze &&\n          !this.maze[newRow][newCol].hasBeenFrontier) {\n        this.frontier.push([newRow, newCol]);\n        this.maze[newRow][newCol].hasBeenFrontier = true;\n      }\n    });\n  }\n\n  isInGrid(row, col) {\n    return 0 <= row && row < this.numMazeRows &&\n           0 <= col && col < this.numMazeCols;\n  }\n\n  inMazeNeighbors(row, col) {\n    return this.getNeighborSpace(row, col).filter(cell => {\n      let [newRow, newCol] = cell;\n      return this.maze[newRow][newCol].isInMaze;\n    });\n  }\n\n  expandMaze(row, col) {\n    this.maze[row][col].isInMaze = true;\n    this.addFrontiers(row, col);\n  }\n\n  getRandomCell() {\n    const randomRow = Math.floor(Math.random() * (this.numGridRows - 1));\n    const randomCol = Math.floor(Math.random() * (this.numGridCols - 1));\n\n    return this.gridToMazePos(randomRow, randomCol);\n  }\n\n  // breaking the wall between [row, col] and [otherRow, otherCol]\n  breakWall(row, col, otherRow, otherCol) {\n    if ((otherRow < row) && col === otherCol) { // other cell is on top of cell\n      this.maze[row - 1][col].isWall = false;\n    } else if ((otherRow > row) && col === otherCol) { // other cell is bottom\n      this.maze[row + 1][col].isWall = false;\n    } else if ((otherCol < col) && row === otherRow) { // other cell is left\n      this.maze[row][col - 1].isWall = false;\n    } else if ((otherCol > col) && row === otherRow) { // other cell is right\n      this.maze[row][col + 1].isWall = false;\n    }\n  }\n\n  generateMaze() {\n    let [randomCol, randomRow] = this.getRandomCell();\n    this.expandMaze(randomRow, randomCol);\n\n    // find a random frontier, find a random neighbor of that frontier,\n    // and break the walls between them\n    while (this.frontier.length !== 0) {\n      const randomIndex = Math.floor(Math.random() * this.frontier.length);\n      const [randomPos] = this.frontier.splice(randomIndex, 1);\n      const [row, col] = randomPos;\n      const neighbors = this.inMazeNeighbors(row, col);\n      const [neighRow, neighCol] =\n        neighbors[Math.floor(Math.random() * neighbors.length)];\n\n      this.breakWall(row, col, neighRow, neighCol);\n      this.expandMaze(row, col);\n    }\n  }\n}\n\nmodule.exports = Board;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/board.js\n **/","class Cell {\n  constructor(isWall) {\n    this.isWall = isWall;\n    this.isInMaze = false;\n    this.hasBeenFrontier = false;\n  }\n}\n\nmodule.exports = Cell;\n\n\n\n/** WEBPACK FOOTER **\n ** ./public/src/cell.js\n **/"],"sourceRoot":""}